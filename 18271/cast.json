{
  "version": 1,
  "width": 80,
  "height": 25,
  "duration": 166.538365,
  "command": "/bin/zsh",
  "title": "",
  "env": {
    "TERM": "xterm",
    "SHELL": "/bin/zsh"
  },
  "stdout": [
    [
      0.716349,
      "\u001b[1m\u001b[7m%\u001b[27m\u001b[1m\u001b[0m                                                                               \r \r"
    ],
    [
      0.000070,
      "\u001b]2;gabe@Gabes-MacBook-Pro: ~/Google Drive/svm_presentation\u0007\u001b]1;.._presentation\u0007"
    ],
    [
      0.011811,
      "\r\u001b[0m\u001b[27m\u001b[24m\u001b[J\u001b[01;32mâžœ \u001b[01;32m \u001b[36msvm_presentation \u001b[01;34m\u001b[01;34m \u001b[00m\u001b[K"
    ],
    [
      0.000170,
      "\u001b[?1h\u001b="
    ],
    [
      6.726201,
      "g"
    ],
    [
      0.110777,
      "\u0008gi"
    ],
    [
      0.095821,
      "t"
    ],
    [
      0.112452,
      " "
    ],
    [
      0.151586,
      "l"
    ],
    [
      0.367938,
      "\u0008 \u0008"
    ],
    [
      0.136252,
      "c"
    ],
    [
      0.095859,
      "l"
    ],
    [
      0.191761,
      "o"
    ],
    [
      0.096123,
      "n"
    ],
    [
      0.128041,
      "e"
    ],
    [
      0.144389,
      " "
    ],
    [
      0.489166,
      "g"
    ],
    [
      0.000117,
      "i"
    ],
    [
      0.000161,
      "t"
    ],
    [
      0.000097,
      "@"
    ],
    [
      0.000086,
      "g"
    ],
    [
      0.000074,
      "i"
    ],
    [
      0.000070,
      "t"
    ],
    [
      0.000073,
      "h"
    ],
    [
      0.000086,
      "u"
    ],
    [
      0.000073,
      "b"
    ],
    [
      0.000075,
      "."
    ],
    [
      0.000072,
      "c"
    ],
    [
      0.000072,
      "o"
    ],
    [
      0.000069,
      "m"
    ],
    [
      0.000057,
      ":"
    ],
    [
      0.000057,
      "c"
    ],
    [
      0.000059,
      "j"
    ],
    [
      0.000061,
      "l"
    ],
    [
      0.000060,
      "i"
    ],
    [
      0.000064,
      "n"
    ],
    [
      0.000062,
      "1"
    ],
    [
      0.000066,
      "/"
    ],
    [
      0.000060,
      "l"
    ],
    [
      0.000055,
      "i"
    ],
    [
      0.000058,
      "b"
    ],
    [
      0.000063,
      "s"
    ],
    [
      0.000059,
      "v"
    ],
    [
      0.000061,
      "m"
    ],
    [
      0.000061,
      "."
    ],
    [
      0.000061,
      "g"
    ],
    [
      0.000061,
      "i"
    ],
    [
      0.000062,
      "t"
    ],
    [
      0.860387,
      "\u001b[?1l\u001b\u003e"
    ],
    [
      0.000110,
      "\r\r\n"
    ],
    [
      0.000950,
      "\u001b]2;git clone git@github.com:cjlin1/libsvm.git\u0007\u001b]1;git\u0007"
    ],
    [
      0.004993,
      "Cloning into 'libsvm'...\r\n"
    ],
    [
      0.269883,
      "remote: Counting objects: 3386, done.\u001b[K\r\n"
    ],
    [
      0.000541,
      "Receiving objects:   0% (1/3386)   \r"
    ],
    [
      0.001330,
      "Receiving objects:   1% (34/3386)   \r"
    ],
    [
      0.001582,
      "Receiving objects:   2% (68/3386)   \r"
    ],
    [
      0.001537,
      "Receiving objects:   3% (102/3386)   \r"
    ],
    [
      0.005037,
      "Receiving objects:   4% (136/3386)   \r"
    ],
    [
      0.001685,
      "Receiving objects:   5% (170/3386)   \r"
    ],
    [
      0.010046,
      "Receiving objects:   6% (204/3386)   \r"
    ],
    [
      0.002270,
      "Receiving objects:   7% (238/3386)   \r"
    ],
    [
      0.001802,
      "Receiving objects:   8% (271/3386)   \r"
    ],
    [
      0.001394,
      "Receiving objects:   9% (305/3386)   \r"
    ],
    [
      0.001272,
      "Receiving objects:  10% (339/3386)   \r"
    ],
    [
      0.007632,
      "Receiving objects:  11% (373/3386)   \r"
    ],
    [
      0.001612,
      "Receiving objects:  12% (407/3386)   \r"
    ],
    [
      0.001176,
      "Receiving objects:  13% (441/3386)   \r"
    ],
    [
      0.001303,
      "Receiving objects:  14% (475/3386)   \r"
    ],
    [
      0.001882,
      "Receiving objects:  15% (508/3386)   \r"
    ],
    [
      0.005647,
      "Receiving objects:  16% (542/3386)   \r"
    ],
    [
      0.001588,
      "Receiving objects:  17% (576/3386)   \r"
    ],
    [
      0.001233,
      "Receiving objects:  18% (610/3386)   \r"
    ],
    [
      0.001289,
      "Receiving objects:  19% (644/3386)   \r"
    ],
    [
      0.001030,
      "Receiving objects:  20% (678/3386)   \r"
    ],
    [
      0.006631,
      "Receiving objects:  21% (712/3386)   \r"
    ],
    [
      0.001993,
      "Receiving objects:  22% (745/3386)   \r"
    ],
    [
      0.001264,
      "Receiving objects:  23% (779/3386)   \r"
    ],
    [
      0.001232,
      "Receiving objects:  24% (813/3386)   \r"
    ],
    [
      0.001248,
      "Receiving objects:  25% (847/3386)   \r"
    ],
    [
      0.005219,
      "Receiving objects:  26% (881/3386)   \r"
    ],
    [
      0.001909,
      "Receiving objects:  27% (915/3386)   \r"
    ],
    [
      0.001656,
      "Receiving objects:  28% (949/3386)   \r"
    ],
    [
      0.001924,
      "Receiving objects:  29% (982/3386)   \r"
    ],
    [
      0.032219,
      "Receiving objects:  30% (1016/3386)   \r"
    ],
    [
      0.002816,
      "Receiving objects:  31% (1050/3386)   \r"
    ],
    [
      0.011570,
      "Receiving objects:  32% (1084/3386)   \r"
    ],
    [
      0.134616,
      "Receiving objects:  33% (1118/3386)   \r"
    ],
    [
      0.031977,
      "Receiving objects:  34% (1152/3386)   \r"
    ],
    [
      0.040997,
      "Receiving objects:  35% (1186/3386)   \r"
    ],
    [
      0.000227,
      "Receiving objects:  36% (1219/3386)   \r"
    ],
    [
      0.083361,
      "Receiving objects:  37% (1253/3386)   \r"
    ],
    [
      0.000295,
      "Receiving objects:  38% (1287/3386)   \r"
    ],
    [
      0.013334,
      "Receiving objects:  39% (1321/3386)   \r"
    ],
    [
      0.027914,
      "Receiving objects:  40% (1355/3386)   \r"
    ],
    [
      0.011252,
      "Receiving objects:  41% (1389/3386)   \r"
    ],
    [
      0.014860,
      "Receiving objects:  42% (1423/3386)   \r"
    ],
    [
      0.029041,
      "Receiving objects:  43% (1456/3386), 1.73 MiB | 3.40 MiB/s   \r"
    ],
    [
      0.015069,
      "Receiving objects:  44% (1490/3386), 1.73 MiB | 3.40 MiB/s   \r"
    ],
    [
      0.000199,
      "Receiving objects:  45% (1524/3386), 1.73 MiB | 3.40 MiB/s   \r"
    ],
    [
      0.063555,
      "Receiving objects:  46% (1558/3386), 1.73 MiB | 3.40 MiB/s   \r"
    ],
    [
      0.001452,
      "Receiving objects:  47% (1592/3386), 1.73 MiB | 3.40 MiB/s   \r"
    ],
    [
      0.028487,
      "Receiving objects:  48% (1626/3386), 1.73 MiB | 3.40 MiB/s   \r"
    ],
    [
      0.039693,
      "Receiving objects:  49% (1660/3386), 1.73 MiB | 3.40 MiB/s   \r"
    ],
    [
      0.000481,
      "Receiving objects:  50% (1693/3386), 1.73 MiB | 3.40 MiB/s   \r"
    ],
    [
      0.002427,
      "Receiving objects:  51% (1727/3386), 1.73 MiB | 3.40 MiB/s   \r"
    ],
    [
      0.011347,
      "Receiving objects:  52% (1761/3386), 1.73 MiB | 3.40 MiB/s   \r"
    ],
    [
      0.107047,
      "Receiving objects:  53% (1795/3386), 1.73 MiB | 3.40 MiB/s   \r"
    ],
    [
      0.011717,
      "Receiving objects:  54% (1829/3386), 1.73 MiB | 3.40 MiB/s   \r"
    ],
    [
      0.003126,
      "Receiving objects:  55% (1863/3386), 1.73 MiB | 3.40 MiB/s   \r"
    ],
    [
      0.000701,
      "Receiving objects:  56% (1897/3386), 1.73 MiB | 3.40 MiB/s   \r"
    ],
    [
      0.026544,
      "Receiving objects:  57% (1931/3386), 1.73 MiB | 3.40 MiB/s   \r"
    ],
    [
      0.014600,
      "Receiving objects:  58% (1964/3386), 1.73 MiB | 3.40 MiB/s   \r"
    ],
    [
      0.012631,
      "Receiving objects:  59% (1998/3386), 1.73 MiB | 3.40 MiB/s   \r"
    ],
    [
      0.015129,
      "Receiving objects:  60% (2032/3386), 1.73 MiB | 3.40 MiB/s   \r"
    ],
    [
      0.011267,
      "Receiving objects:  61% (2066/3386), 1.73 MiB | 3.40 MiB/s   \r"
    ],
    [
      0.000623,
      "Receiving objects:  62% (2100/3386), 1.73 MiB | 3.40 MiB/s   \r"
    ],
    [
      0.073111,
      "Receiving objects:  63% (2134/3386), 1.73 MiB | 3.40 MiB/s   \r"
    ],
    [
      0.034109,
      "Receiving objects:  64% (2168/3386), 1.73 MiB | 3.40 MiB/s   \r"
    ],
    [
      0.016974,
      "Receiving objects:  65% (2201/3386), 1.73 MiB | 3.40 MiB/s   \r"
    ],
    [
      0.000295,
      "Receiving objects:  65% (2217/3386), 1.73 MiB | 3.40 MiB/s   \r"
    ],
    [
      0.000310,
      "Receiving objects:  66% (2235/3386), 1.73 MiB | 3.40 MiB/s   \r"
    ],
    [
      0.000852,
      "Receiving objects:  67% (2269/3386), 1.73 MiB | 3.40 MiB/s   \r"
    ],
    [
      0.028102,
      "Receiving objects:  68% (2303/3386), 3.51 MiB | 3.46 MiB/s   \r"
    ],
    [
      0.011831,
      "Receiving objects:  69% (2337/3386), 3.51 MiB | 3.46 MiB/s   \r"
    ],
    [
      0.000754,
      "Receiving objects:  70% (2371/3386), 3.51 MiB | 3.46 MiB/s   \r"
    ],
    [
      0.002208,
      "Receiving objects:  71% (2405/3386), 3.51 MiB | 3.46 MiB/s   \r"
    ],
    [
      0.014646,
      "Receiving objects:  72% (2438/3386), 3.51 MiB | 3.46 MiB/s   \r"
    ],
    [
      0.001687,
      "Receiving objects:  73% (2472/3386), 3.51 MiB | 3.46 MiB/s   \r"
    ],
    [
      0.072189,
      "Receiving objects:  74% (2506/3386), 3.51 MiB | 3.46 MiB/s   \r"
    ],
    [
      0.000806,
      "Receiving objects:  75% (2540/3386), 3.51 MiB | 3.46 MiB/s   \r"
    ],
    [
      0.000583,
      "Receiving objects:  76% (2574/3386), 3.51 MiB | 3.46 MiB/s   \r"
    ],
    [
      0.013418,
      "Receiving objects:  77% (2608/3386), 3.51 MiB | 3.46 MiB/s   \r"
    ],
    [
      0.000599,
      "Receiving objects:  78% (2642/3386), 3.51 MiB | 3.46 MiB/s   \r"
    ],
    [
      0.030759,
      "Receiving objects:  79% (2675/3386), 3.51 MiB | 3.46 MiB/s   \r"
    ],
    [
      0.000390,
      "Receiving objects:  80% (2709/3386), 3.51 MiB | 3.46 MiB/s   \r"
    ],
    [
      0.000325,
      "Receiving objects:  81% (2743/3386), 3.51 MiB | 3.46 MiB/s   \r"
    ],
    [
      0.043538,
      "Receiving objects:  82% (2777/3386), 3.51 MiB | 3.46 MiB/s   \r"
    ],
    [
      0.000923,
      "Receiving objects:  83% (2811/3386), 3.51 MiB | 3.46 MiB/s   \r"
    ],
    [
      0.010122,
      "Receiving objects:  84% (2845/3386), 3.51 MiB | 3.46 MiB/s   \r"
    ],
    [
      0.016971,
      "Receiving objects:  85% (2879/3386), 3.51 MiB | 3.46 MiB/s   \r"
    ],
    [
      0.000659,
      "Receiving objects:  86% (2912/3386), 3.51 MiB | 3.46 MiB/s   \r"
    ],
    [
      0.032575,
      "Receiving objects:  87% (2946/3386), 3.51 MiB | 3.46 MiB/s   \r"
    ],
    [
      0.002343,
      "Receiving objects:  88% (2980/3386), 3.51 MiB | 3.46 MiB/s   \r"
    ],
    [
      0.000393,
      "Receiving objects:  89% (3014/3386), 3.51 MiB | 3.46 MiB/s   \r"
    ],
    [
      0.034466,
      "Receiving objects:  90% (3048/3386), 3.51 MiB | 3.46 MiB/s   \r"
    ],
    [
      0.000488,
      "Receiving objects:  91% (3082/3386), 3.51 MiB | 3.46 MiB/s   \r"
    ],
    [
      0.020386,
      "Receiving objects:  92% (3116/3386), 3.51 MiB | 3.46 MiB/s   \r"
    ],
    [
      0.021958,
      "Receiving objects:  93% (3149/3386), 3.51 MiB | 3.46 MiB/s   \r"
    ],
    [
      0.014457,
      "Receiving objects:  94% (3183/3386), 3.51 MiB | 3.46 MiB/s   \r"
    ],
    [
      0.003832,
      "Receiving objects:  95% (3217/3386), 3.51 MiB | 3.46 MiB/s   \r"
    ],
    [
      0.000990,
      "Receiving objects:  96% (3251/3386), 3.51 MiB | 3.46 MiB/s   \r"
    ],
    [
      0.021398,
      "remote: Total 3386 (delta 0), reused 0 (delta 0), pack-reused 3386\u001b[K\r\n"
    ],
    [
      0.000389,
      "Receiving objects:  97% (3285/3386), 3.51 MiB | 3.46 MiB/s   \r"
    ],
    [
      0.001449,
      "Receiving objects:  98% (3319/3386), 3.51 MiB | 3.46 MiB/s   \r"
    ],
    [
      0.000579,
      "Receiving objects:  99% (3353/3386), 3.51 MiB | 3.46 MiB/s   \r"
    ],
    [
      0.000248,
      "Receiving objects: 100% (3386/3386), 3.51 MiB | 3.46 MiB/s   \rReceiving objects: 100% (3386/3386), 5.01 MiB | 3.46 MiB/s, done.\r\n"
    ],
    [
      0.000503,
      "Resolving deltas:   0% (0/1786)   \r"
    ],
    [
      0.002423,
      "Resolving deltas:   1% (18/1786)   \r"
    ],
    [
      0.001468,
      "Resolving deltas:   2% (36/1786)   \r"
    ],
    [
      0.000909,
      "Resolving deltas:   3% (59/1786)   \r"
    ],
    [
      0.000982,
      "Resolving deltas:   4% (85/1786)   \r"
    ],
    [
      0.000738,
      "Resolving deltas:   5% (106/1786)   \r"
    ],
    [
      0.000387,
      "Resolving deltas:   6% (117/1786)   \r"
    ],
    [
      0.001602,
      "Resolving deltas:   8% (148/1786)   \r"
    ],
    [
      0.003510,
      "Resolving deltas:  13% (238/1786)   \r"
    ],
    [
      0.000344,
      "Resolving deltas:  14% (251/1786)   \r"
    ],
    [
      0.001080,
      "Resolving deltas:  16% (288/1786)   \r"
    ],
    [
      0.000972,
      "Resolving deltas:  17% (314/1786)   \r"
    ],
    [
      0.000436,
      "Resolving deltas:  18% (326/1786)   \r"
    ],
    [
      0.000824,
      "Resolving deltas:  19% (349/1786)   \r"
    ],
    [
      0.000371,
      "Resolving deltas:  20% (359/1786)   \r"
    ],
    [
      0.000872,
      "Resolving deltas:  21% (387/1786)   \r"
    ],
    [
      0.000527,
      "Resolving deltas:  22% (406/1786)   \r"
    ],
    [
      0.000201,
      "Resolving deltas:  23% (412/1786)   \r"
    ],
    [
      0.000503,
      "Resolving deltas:  24% (430/1786)   \r"
    ],
    [
      0.000660,
      "Resolving deltas:  25% (451/1786)   \r"
    ],
    [
      0.000411,
      "Resolving deltas:  26% (465/1786)   \r"
    ],
    [
      0.001510,
      "Resolving deltas:  27% (489/1786)   \r"
    ],
    [
      0.002383,
      "Resolving deltas:  31% (559/1786)   \r"
    ],
    [
      0.001341,
      "Resolving deltas:  32% (580/1786)   \r"
    ],
    [
      0.002031,
      "Resolving deltas:  34% (609/1786)   \r"
    ],
    [
      0.000823,
      "Resolving deltas:  35% (626/1786)   \r"
    ],
    [
      0.006210,
      "Resolving deltas:  39% (697/1786)   \r"
    ],
    [
      0.001773,
      "Resolving deltas:  40% (721/1786)   \r"
    ],
    [
      0.000531,
      "Resolving deltas:  41% (739/1786)   \r"
    ],
    [
      0.000422,
      "Resolving deltas:  42% (751/1786)   \r"
    ],
    [
      0.001181,
      "Resolving deltas:  43% (778/1786)   \r"
    ],
    [
      0.000647,
      "Resolving deltas:  44% (797/1786)   \r"
    ],
    [
      0.000388,
      "Resolving deltas:  45% (808/1786)   \r"
    ],
    [
      0.000576,
      "Resolving deltas:  46% (827/1786)   \r"
    ],
    [
      0.000374,
      "Resolving deltas:  47% (841/1786)   \r"
    ],
    [
      0.001041,
      "Resolving deltas:  48% (865/1786)   \r"
    ],
    [
      0.000429,
      "Resolving deltas:  49% (878/1786)   \r"
    ],
    [
      0.000676,
      "Resolving deltas:  50% (900/1786)   \r"
    ],
    [
      0.000341,
      "Resolving deltas:  51% (911/1786)   \r"
    ],
    [
      0.001076,
      "Resolving deltas:  52% (940/1786)   \r"
    ],
    [
      0.000265,
      "Resolving deltas:  53% (947/1786)   \r"
    ],
    [
      0.000708,
      "Resolving deltas:  54% (968/1786)   \r"
    ],
    [
      0.000652,
      "Resolving deltas:  55% (990/1786)   \r"
    ],
    [
      0.000424,
      "Resolving deltas:  56% (1007/1786)   \r"
    ],
    [
      0.000348,
      "Resolving deltas:  57% (1020/1786)   \r"
    ],
    [
      0.000630,
      "Resolving deltas:  58% (1039/1786)   \r"
    ],
    [
      0.000660,
      "Resolving deltas:  59% (1064/1786)   \r"
    ],
    [
      0.001049,
      "Resolving deltas:  60% (1079/1786)   \r"
    ],
    [
      0.002342,
      "Resolving deltas:  61% (1103/1786)   \r"
    ],
    [
      0.000328,
      "Resolving deltas:  62% (1113/1786)   \r"
    ],
    [
      0.000585,
      "Resolving deltas:  63% (1131/1786)   \r"
    ],
    [
      0.000381,
      "Resolving deltas:  64% (1144/1786)   \r"
    ],
    [
      0.000544,
      "Resolving deltas:  65% (1161/1786)   \r"
    ],
    [
      0.000543,
      "Resolving deltas:  66% (1180/1786)   \r"
    ],
    [
      0.000587,
      "Resolving deltas:  67% (1198/1786)   \r"
    ],
    [
      0.001305,
      "Resolving deltas:  68% (1215/1786)   \r"
    ],
    [
      0.000914,
      "Resolving deltas:  69% (1239/1786)   \r"
    ],
    [
      0.000735,
      "Resolving deltas:  70% (1251/1786)   \r"
    ],
    [
      0.002178,
      "Resolving deltas:  71% (1275/1786)   \r"
    ],
    [
      0.000375,
      "Resolving deltas:  72% (1286/1786)   \r"
    ],
    [
      0.000709,
      "Resolving deltas:  73% (1307/1786)   \r"
    ],
    [
      0.000851,
      "Resolving deltas:  74% (1330/1786)   \r"
    ],
    [
      0.000449,
      "Resolving deltas:  75% (1341/1786)   \r"
    ],
    [
      0.000653,
      "Resolving deltas:  76% (1362/1786)   \r"
    ],
    [
      0.000609,
      "Resolving deltas:  77% (1382/1786)   \r"
    ],
    [
      0.000460,
      "Resolving deltas:  78% (1397/1786)   \r"
    ],
    [
      0.000443,
      "Resolving deltas:  79% (1412/1786)   \r"
    ],
    [
      0.001279,
      "Resolving deltas:  80% (1431/1786)   \r"
    ],
    [
      0.000466,
      "Resolving deltas:  81% (1448/1786)   \r"
    ],
    [
      0.000495,
      "Resolving deltas:  82% (1467/1786)   \r"
    ],
    [
      0.000960,
      "Resolving deltas:  83% (1483/1786)   \r"
    ],
    [
      0.001183,
      "Resolving deltas:  84% (1501/1786)   \r"
    ],
    [
      0.000728,
      "Resolving deltas:  85% (1522/1786)   \r"
    ],
    [
      0.000564,
      "Resolving deltas:  86% (1540/1786)   \r"
    ],
    [
      0.000477,
      "Resolving deltas:  87% (1555/1786)   \r"
    ],
    [
      0.000661,
      "Resolving deltas:  88% (1573/1786)   \r"
    ],
    [
      0.000699,
      "Resolving deltas:  89% (1596/1786)   \r"
    ],
    [
      0.000818,
      "Resolving deltas:  90% (1609/1786)   \r"
    ],
    [
      0.000504,
      "Resolving deltas:  91% (1627/1786)   \r"
    ],
    [
      0.000646,
      "Resolving deltas:  92% (1646/1786)   \r"
    ],
    [
      0.000599,
      "Resolving deltas:  93% (1663/1786)   \r"
    ],
    [
      0.000625,
      "Resolving deltas:  94% (1680/1786)   \r"
    ],
    [
      0.000565,
      "Resolving deltas:  95% (1698/1786)   \r"
    ],
    [
      0.000485,
      "Resolving deltas:  96% (1715/1786)   \r"
    ],
    [
      0.000709,
      "Resolving deltas:  97% (1736/1786)   \r"
    ],
    [
      0.000427,
      "Resolving deltas:  98% (1751/1786)   \r"
    ],
    [
      0.000798,
      "Resolving deltas:  99% (1779/1786)   \r"
    ],
    [
      0.000142,
      "Resolving deltas: 100% (1786/1786)   \r"
    ],
    [
      0.000049,
      "Resolving deltas: 100% (1786/1786), done.\r\n"
    ],
    [
      0.059004,
      "Checking connectivity... "
    ],
    [
      0.004477,
      "done.\r\n"
    ],
    [
      0.025411,
      "\u001b[1m\u001b[7m%\u001b[27m\u001b[1m\u001b[0m                                                                               \r \r"
    ],
    [
      0.000111,
      "\u001b]2;gabe@Gabes-MacBook-Pro: ~/Google Drive/svm_presentation\u0007"
    ],
    [
      0.000033,
      "\u001b]1;.._presentation\u0007"
    ],
    [
      0.013803,
      "\r\u001b[0m\u001b[27m\u001b[24m\u001b[J\u001b[01;32mâžœ \u001b[01;32m \u001b[36msvm_presentation \u001b[01;34m\u001b[01;34m \u001b[00m"
    ],
    [
      0.000006,
      "\u001b[K"
    ],
    [
      0.000111,
      "\u001b[?1h\u001b="
    ],
    [
      1.095760,
      "c"
    ],
    [
      0.047341,
      "\u0008cd"
    ],
    [
      0.128314,
      " "
    ],
    [
      1.455646,
      "l"
    ],
    [
      0.064047,
      "i"
    ],
    [
      0.080172,
      "b"
    ],
    [
      0.161575,
      "svm\u001b[1m/\u001b[0m"
    ],
    [
      0.494146,
      "\u0008\u001b[0m \u0008"
    ],
    [
      0.000035,
      "\u001b[?1l\u001b\u003e"
    ],
    [
      0.000040,
      "\r\r\n"
    ],
    [
      0.000838,
      "\u001b]2;cd libsvm\u0007\u001b]1;cd\u0007"
    ],
    [
      0.018503,
      "\u001b[1m\u001b[7m%\u001b[27m\u001b[1m\u001b[0m                                                                               \r \r"
    ],
    [
      0.000033,
      "\u001b]2;gabe@Gabes-MacBook-Pro: ~/Google Drive/svm_presentation/libsvm\u0007"
    ],
    [
      0.000018,
      "\u001b]1;..tation/libsvm\u0007"
    ],
    [
      0.020999,
      "\r\u001b[0m\u001b[27m\u001b[24m\u001b[J\u001b[01;32mâžœ \u001b[01;32m \u001b[36mlibsvm \u001b[01;34mgit:(\u001b[31mmaster\u001b[34m)\u001b[00m\u001b[01;34m \u001b[00m"
    ],
    [
      0.000006,
      "\u001b[K"
    ],
    [
      0.000086,
      "\u001b[?1h\u001b="
    ],
    [
      1.199872,
      "m"
    ],
    [
      0.055586,
      "\u0008ma"
    ],
    [
      0.119748,
      "k"
    ],
    [
      0.082868,
      "e"
    ],
    [
      0.365293,
      "\u001b[?1l\u001b\u003e"
    ],
    [
      0.000063,
      "\r\r\n"
    ],
    [
      0.000796,
      "\u001b]2;make\u0007\u001b]1;make\u0007"
    ],
    [
      0.007403,
      "c++ -Wall -Wconversion -O3 -fPIC -c svm.cpp\r\n"
    ],
    [
      0.028701,
      "\u001b[1msvm.cpp:96:"
    ],
    [
      0.000009,
      "26: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion changes signedness: 'int' to\r\n      'size_t'"
    ],
    [
      0.000003,
      " (aka 'unsigned long') [-Wsign-conversion]"
    ],
    [
      0.000003,
      "\u001b[0m\r\n"
    ],
    [
      0.000068,
      "        head = (head_t *)calloc(l,sizeof(head_t));      // initialized to 0\r\n\u001b[0;1;32m"
    ],
    [
      0.000004,
      "                         ~~~~~~ ^\r\n\u001b[0m"
    ],
    [
      0.000054,
      "\u001b[1msvm.cpp:98:10: \u001b[0m\u001b[0;1;35m"
    ],
    [
      0.000005,
      "warning: \u001b[0m\u001b[1mimplicit conversion changes signedness: 'int' to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000015,
      "        size -= l * sizeof(head_t) / sizeof(Qfloat);\r\n\u001b[0;1;32m                ^ ~"
    ],
    [
      0.000003,
      "\r\n\u001b[0m"
    ],
    [
      0.001102,
      "\u001b[1msvm.cpp:146:54: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion changes signedness: "
    ],
    [
      0.000006,
      "'int' to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000033,
      "                h-\u003edata = (Qfloat *)realloc(h-\u003edata,sizeof(Qfloat)*len);\r\n\u001b[0;1;32m                                                                  ~^~~\r\n\u001b[0m"
    ],
    [
      0.013011,
      "\u001b[1msvm.cpp:1651:38"
    ],
    [
      0.000007,
      ": \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion changes signedness: 'const int' to\r\n      'unsigned long' [-Wsign-conversion]"
    ],
    [
      0.000003,
      "\u001b[0m\r\n"
    ],
    [
      0.000029,
      "        double *alpha = Malloc(double,prob-\u003el);\r\n"
    ],
    [
      0.000005,
      "\u001b[0;1;32m                        ~~~~~~~~~~~~~~~~~~~~^~\r\n\u001b[0m"
    ],
    [
      0.000022,
      "\u001b[1msvm.cpp:39:40: "
    ],
    [
      0.000005,
      "\u001b[0m\u001b[0;1;30mnote: \u001b[0mexpanded from "
    ],
    [
      0.000002,
      "macro 'Malloc'"
    ],
    [
      0.000002,
      "\u001b[0m\r\n"
    ],
    [
      0.000041,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000498,
      "\u001b[1msvm.cpp:1722:26: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion changes signedness: 'int'"
    ],
    [
      0.000005,
      " to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000021,
      "        double *t=Malloc(double,l);\r\n\u001b[0;1;32m                  ~~~~~~~~~~~~~~^~\r\n\u001b[0m\u001b[1msvm.cpp:"
    ],
    [
      0.000017,
      "39:40: \u001b[0m"
    ],
    [
      0.000014,
      "\u001b[0;1;30mnote: \u001b[0mexpanded from macro 'Malloc'\u001b[0m\r\n"
    ],
    [
      0.000044,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000801,
      "\u001b[1msvm.cpp:1833:29: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit "
    ],
    [
      0.000004,
      "conversion changes signedness: 'int' to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000047,
      "        double **Q=Malloc(double *,k);\r\n\u001b[0;1;32m                   ~~~~~~~~~~~~~~~~^~\r\n\u001b[0m\u001b[1msvm.cpp:39"
    ],
    [
      0.000005,
      ":40: \u001b[0m\u001b[0;1;30mnote: \u001b[0mexpanded from macro 'Malloc'\u001b[0m"
    ],
    [
      0.000002,
      "\r\n"
    ],
    [
      0.000040,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))"
    ],
    [
      0.000006,
      "\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000034,
      "\u001b[1msvm.cpp:"
    ],
    [
      0.000003,
      "1834:27: \u001b[0m\u001b[0;1;35mwarning: "
    ],
    [
      0.000002,
      "\u001b[0m\u001b[1mimplicit"
    ],
    [
      0.000002,
      " conversion "
    ],
    [
      0.000002,
      "changes signedness:"
    ],
    [
      0.000002,
      " 'int'"
    ],
    [
      0.000002,
      " to\r\n"
    ],
    [
      0.000003,
      "      'unsigned long' "
    ],
    [
      0.000005,
      "[-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000019,
      "        double *Qp=Malloc(double,k);\r\n\u001b[0;1;32m                   ~~~~~~~~~~~~~~^~\r\n\u001b[0m"
    ],
    [
      0.000004,
      "\u001b[1msvm.cpp:39:40:"
    ],
    [
      0.000003,
      " \u001b[0m\u001b[0;1;30mnote"
    ],
    [
      0.000003,
      ": \u001b[0mexpanded "
    ],
    [
      0.000003,
      "from macro "
    ],
    [
      0.000003,
      "'Malloc'\u001b[0m\r\n"
    ],
    [
      0.000028,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n"
    ],
    [
      0.000006,
      "\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000160,
      "\u001b[1msvm.cpp:1840:22: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion changes signedness: 'int' "
    ],
    [
      0.000004,
      "to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000007,
      "                Q[t]=Malloc(double,k);\r\n\u001b[0;1;32m"
    ],
    [
      0.000003,
      "                     ~~~~~~~~~~~~~~^~\r\n\u001b[0m"
    ],
    [
      0.000002,
      "\u001b[1m"
    ],
    [
      0.000002,
      "svm.cpp:39"
    ],
    [
      0.000002,
      ":40:"
    ],
    [
      0.000002,
      " \u001b[0m\u001b[0;1;30m"
    ],
    [
      0.000002,
      "note: \u001b[0m"
    ],
    [
      0.000002,
      "expanded "
    ],
    [
      0.000002,
      "from macro"
    ],
    [
      0.000002,
      " 'Malloc'"
    ],
    [
      0.000002,
      "\u001b[0m\r\n"
    ],
    [
      0.000022,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000463,
      "\u001b[1msvm.cpp:1899:31: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion"
    ],
    [
      0.000006,
      " changes signedness: 'const int' to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000013,
      "        int *perm = Malloc(int,prob-\u003el);\r\n\u001b[0;1;32m                    ~~~~~~~~~~~~~~~~~^~\r\n\u001b[0m"
    ],
    [
      0.000003,
      "\u001b[1msvm.cpp:39:"
    ],
    [
      0.000002,
      "40: "
    ],
    [
      0.000002,
      "\u001b[0m\u001b[0;1;30mnote"
    ],
    [
      0.000002,
      ": \u001b[0mexpanded"
    ],
    [
      0.000019,
      " from macro 'Malloc'\u001b[0m\r\n"
    ],
    [
      0.000007,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m"
    ],
    [
      0.000003,
      "                                       ^\r\n\u001b[0m"
    ],
    [
      0.000043,
      "\u001b[1msvm.cpp:1900:"
    ],
    [
      0.000005,
      "43: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1m"
    ],
    [
      0.000003,
      "implicit conversion changes"
    ],
    [
      0.000011,
      " signedness: 'const int'"
    ],
    [
      0.000004,
      " to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000021,
      "        double *dec_values = Malloc(double,prob-\u003el);\r\n\u001b[0;1;32m                             ~~~~~~~~~~~~~~~~~~~~^~\r\n\u001b[0m"
    ],
    [
      0.000003,
      "\u001b[1msvm.cpp"
    ],
    [
      0.000002,
      ":39"
    ],
    [
      0.000002,
      ":40"
    ],
    [
      0.000002,
      ": "
    ],
    [
      0.000002,
      "\u001b[0m"
    ],
    [
      0.000002,
      "\u001b[0;1;30mnote"
    ],
    [
      0.000002,
      ": \u001b[0m"
    ],
    [
      0.000002,
      "expanded from"
    ],
    [
      0.000002,
      " macro"
    ],
    [
      0.000002,
      " 'Malloc'\u001b[0m"
    ],
    [
      0.000002,
      "\r\n"
    ],
    [
      0.000017,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m"
    ],
    [
      0.000003,
      "                                       ^\r\n\u001b[0m"
    ],
    [
      0.000223,
      "\u001b[1msvm.cpp:1917:47: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit "
    ],
    [
      0.000004,
      "conversion changes signedness: 'int' to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000044,
      "                subprob.x = Malloc(struct svm_node*,subprob.l);\r\n\u001b[0;1;32m                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\r\n\u001b[0m"
    ],
    [
      0.000004,
      "\u001b[1msvm.cpp:39"
    ],
    [
      0.000002,
      ":40"
    ],
    [
      0.000002,
      ": "
    ],
    [
      0.000016,
      "\u001b[0m\u001b[0;1;30mnote"
    ],
    [
      0.000003,
      ": \u001b[0mexpanded from macro"
    ],
    [
      0.000002,
      " 'Malloc'"
    ],
    [
      0.000005,
      "\u001b[0m\r\n"
    ],
    [
      0.000039,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000046,
      "\u001b[1msvm.cpp:1918:"
    ],
    [
      0.000004,
      "37: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m"
    ],
    [
      0.000005,
      "\u001b[1mimplicit conversion"
    ],
    [
      0.000003,
      " changes signedness: 'int'"
    ],
    [
      0.000003,
      " to\r\n"
    ],
    [
      0.000003,
      "      'unsigned long' [-Wsign-conversion]"
    ],
    [
      0.000003,
      "\u001b[0m\r\n"
    ],
    [
      0.000022,
      "                subprob.y = Malloc(double,subprob.l);\r\n\u001b[0;1;32m                            ~~~~~~~~~~~~~~~~~~~~~~^~"
    ],
    [
      0.000005,
      "\r\n\u001b[0m\u001b[1msvm.cpp:39:40: \u001b[0m\u001b[0;1;30mnote"
    ],
    [
      0.000002,
      ": \u001b[0mexpanded "
    ],
    [
      0.000002,
      "from macro"
    ],
    [
      0.000002,
      " 'Malloc'\u001b[0m"
    ],
    [
      0.000002,
      "\r\n"
    ],
    [
      0.000018,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000658,
      "\u001b[1msvm.cpp:1985:36: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit "
    ],
    [
      0.000004,
      "conversion changes signedness: 'const int' to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000034,
      "        double *ymv = Malloc(double,prob-\u003el);\r\n\u001b[0;1;32m                      ~~~~~~~~~~~~~~~~~~~~^~\r\n"
    ],
    [
      0.000012,
      "\u001b[0m"
    ],
    [
      0.000007,
      "\u001b[1msvm.cpp:39:40: \u001b[0m\u001b[0;1;30mnote: \u001b[0mexpanded from"
    ],
    [
      0.000002,
      " macro 'Malloc'\u001b[0m\r\n"
    ],
    [
      0.000028,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000392,
      "\u001b[1msvm.cpp:2019:26: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit "
    ],
    [
      0.000004,
      "conversion changes signedness: 'int' to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000014,
      "        int *label = Malloc(int,max_nr_class);\r\n\u001b[0;1;32m"
    ],
    [
      0.000003,
      "                     ~~~~~~~~~~~^~~~~~~~~~~~~\r\n\u001b[0m"
    ],
    [
      0.000002,
      "\u001b[1msvm.cpp"
    ],
    [
      0.000002,
      ":39:"
    ],
    [
      0.000002,
      "40: "
    ],
    [
      0.000002,
      "\u001b[0m\u001b[0;1;30m"
    ],
    [
      0.000002,
      "note: \u001b[0m"
    ],
    [
      0.000004,
      "expanded from"
    ],
    [
      0.000002,
      " macro 'Malloc'\u001b[0m"
    ],
    [
      0.000010,
      "\r\n"
    ],
    [
      0.000013,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000038,
      "\u001b[1msvm.cpp:2020:26"
    ],
    [
      0.000020,
      ": \u001b[0m\u001b[0;1;35mwarning: \u001b[0m"
    ],
    [
      0.000006,
      "\u001b[1mimplicit conversion changes signedness: 'int' to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000015,
      "        int *count = Malloc(int,max_nr_class);\r\n\u001b[0;1;32m                     ~~~~~~~~~~~^~~~~~~~~~~~~\r\n\u001b[0m"
    ],
    [
      0.000003,
      "\u001b[1msvm.cpp:39:40: \u001b[0m"
    ],
    [
      0.000002,
      "\u001b[0;1;30mnote: \u001b[0m"
    ],
    [
      0.000002,
      "expanded "
    ],
    [
      0.000002,
      "from macro"
    ],
    [
      0.000002,
      " 'Malloc'\u001b[0m"
    ],
    [
      0.000002,
      "\r\n"
    ],
    [
      0.000020,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000037,
      "\u001b[1msvm.cpp:2021:31: \u001b[0m\u001b[0;1;35mwarning: "
    ],
    [
      0.000004,
      "\u001b[0m\u001b[1mimplicit conversion changes signedness:"
    ],
    [
      0.000002,
      " 'int' "
    ],
    [
      0.000002,
      "to\r\n      "
    ],
    [
      0.000002,
      "'unsigned long' "
    ],
    [
      0.000002,
      "[-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000014,
      "        int *data_label = Malloc(int,l);\r\n\u001b[0;1;32m"
    ],
    [
      0.000003,
      "                          ~~~~~~~~~~~^~\r\n\u001b[0m\u001b[1msvm.cpp"
    ],
    [
      0.000002,
      ":39:"
    ],
    [
      0.000002,
      "40: "
    ],
    [
      0.000002,
      "\u001b[0m\u001b[0;1;30mnote"
    ],
    [
      0.000002,
      ": \u001b[0mexpanded"
    ],
    [
      0.000002,
      " from "
    ],
    [
      0.000002,
      "macro "
    ],
    [
      0.000002,
      "'Malloc'\u001b[0m\r\n"
    ],
    [
      0.000020,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000090,
      "\u001b[1msvm.cpp:2042"
    ],
    [
      0.000004,
      ":34: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit "
    ],
    [
      0.000002,
      "conversion changes "
    ],
    [
      0.000002,
      "signedness: 'int'"
    ],
    [
      0.000002,
      " to\r\n"
    ],
    [
      0.000002,
      "      'unsigned long' "
    ],
    [
      0.000002,
      "[-Wsign-conversion]\u001b[0m"
    ],
    [
      0.000002,
      "\r\n"
    ],
    [
      0.000041,
      "  ...label = (int *)realloc(label,max_nr_class*sizeof(int));\r\n\u001b[0;1;32m                                  ^~~~~~~~~~~~~\r\n\u001b[0m"
    ],
    [
      0.000042,
      "\u001b[1msvm.cpp:2043"
    ],
    [
      0.000005,
      ":34: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion changes signedness: "
    ],
    [
      0.000002,
      "'int' "
    ],
    [
      0.000012,
      "to\r\n"
    ],
    [
      0.000003,
      "      'unsigned long' [-Wsign-conversion]"
    ],
    [
      0.000002,
      "\u001b[0m\r\n"
    ],
    [
      0.000041,
      "  ...count = (int *)realloc(count,max_nr_class*sizeof(int));\r\n\u001b[0;1;32m                                  ^~~~~~~~~~~~~\r\n\u001b[0m"
    ],
    [
      0.000161,
      "\u001b[1msvm.cpp:2069:26: \u001b[0m\u001b[0;1;35mwarning"
    ],
    [
      0.000003,
      ": \u001b[0m\u001b[1mimplicit conversion changes signedness:"
    ],
    [
      0.000002,
      " 'int' "
    ],
    [
      0.000002,
      "to\r\n"
    ],
    [
      0.000002,
      "      'unsigned long'"
    ],
    [
      0.000002,
      " "
    ],
    [
      0.000002,
      "[-Wsign-conversion]\u001b[0m"
    ],
    [
      0.000002,
      "\r\n"
    ],
    [
      0.000027,
      "        int *start = Malloc(int,nr_class);\r\n\u001b[0;1;32m                     ~~~~~~~~~~~^~~~~~~~~\r\n\u001b[0m"
    ],
    [
      0.000004,
      "\u001b[1msvm.cpp:39:40: \u001b[0m\u001b[0;1;30m"
    ],
    [
      0.000002,
      "note: \u001b[0m"
    ],
    [
      0.000002,
      "expanded from"
    ],
    [
      0.000002,
      " macro "
    ],
    [
      0.000002,
      "'Malloc'\u001b[0m"
    ],
    [
      0.000002,
      "\r\n"
    ],
    [
      0.000021,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000809,
      "\u001b[1msvm.cpp:2126:33: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit "
    ],
    [
      0.000006,
      "conversion changes signedness: 'int' to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000015,
      "                model-\u003eSV = Malloc(svm_node *,nSV);\r\n\u001b[0;1;32m                            ~~~~~~~~~~~~~~~~~~^~~~"
    ],
    [
      0.000003,
      "\r\n\u001b[0m\u001b[1m"
    ],
    [
      0.000011,
      "svm.cpp:39"
    ],
    [
      0.000005,
      ":40: \u001b[0m\u001b[0;1;30mnote: \u001b[0mexpanded from macro 'Malloc'\u001b[0m"
    ],
    [
      0.000002,
      "\r\n"
    ],
    [
      0.000031,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000030,
      "\u001b[1msvm.cpp:2127"
    ],
    [
      0.000004,
      ":37: \u001b[0m"
    ],
    [
      0.000003,
      "\u001b[0;1;35mwarning: \u001b[0m"
    ],
    [
      0.000002,
      "\u001b[1mimplicit"
    ],
    [
      0.000002,
      " conversion"
    ],
    [
      0.000002,
      " changes"
    ],
    [
      0.000002,
      " signedness:"
    ],
    [
      0.000002,
      " 'int'"
    ],
    [
      0.000021,
      " to\r\n      'unsigned long' "
    ],
    [
      0.000004,
      "[-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000014,
      "                model-\u003esv_coef[0] = Malloc(double,nSV);\r\n\u001b[0;1;32m                                    ~~~~~~~~~~~~~~^~~~"
    ],
    [
      0.000003,
      "\r\n\u001b[0m"
    ],
    [
      0.000002,
      "\u001b[1msvm.cpp"
    ],
    [
      0.000002,
      ":39:"
    ],
    [
      0.000002,
      "40: "
    ],
    [
      0.000002,
      "\u001b[0m\u001b[0;1;30m"
    ],
    [
      0.000003,
      "note: \u001b[0m"
    ],
    [
      0.000003,
      "expanded from "
    ],
    [
      0.000003,
      "macro 'Malloc'"
    ],
    [
      0.000003,
      "\u001b[0m\r\n"
    ],
    [
      0.000019,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000055,
      "\u001b[1msvm.cpp:"
    ],
    [
      0.000003,
      "2128:34: \u001b[0m\u001b[0;1;35m"
    ],
    [
      0.000002,
      "warning: \u001b[0m"
    ],
    [
      0.000004,
      "\u001b[1mimplicit"
    ],
    [
      0.000003,
      " conversion changes signedness:"
    ],
    [
      0.000003,
      " 'int' to"
    ],
    [
      0.000023,
      "\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n                model-\u003esv_indices = Malloc(int,nSV);\r\n\u001b[0;1;32m                                    ~~~~~~~~~~~^~~~\r\n\u001b[0m"
    ],
    [
      0.000007,
      "\u001b[1msvm.cpp:39:40: \u001b[0m\u001b[0;1;30m"
    ],
    [
      0.000003,
      "note: \u001b[0mexpanded "
    ],
    [
      0.000002,
      "from macro "
    ],
    [
      0.000002,
      "'Malloc'\u001b[0m\r\n"
    ],
    [
      0.000015,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m"
    ],
    [
      0.000003,
      "                                       ^\r\n\u001b[0m"
    ],
    [
      0.000147,
      "\u001b[1msvm.cpp:"
    ],
    [
      0.000005,
      "2149:26: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1m"
    ],
    [
      0.000003,
      "implicit conversion"
    ],
    [
      0.000003,
      " changes "
    ],
    [
      0.000003,
      "signedness: 'int' "
    ],
    [
      0.000003,
      "to\r\n      'unsigned long'"
    ],
    [
      0.000002,
      " [-Wsign-conversion]\u001b[0m"
    ],
    [
      0.000002,
      "\r\n"
    ],
    [
      0.000019,
      "                int *perm = Malloc(int,l);\r\n\u001b[0;1;32m                            ~~~~~~~~~~~^~\r\n\u001b[0m"
    ],
    [
      0.000003,
      "\u001b[1msvm.cpp:39:40: "
    ],
    [
      0.000002,
      "\u001b[0m\u001b[0;1;30mnote"
    ],
    [
      0.000011,
      ": \u001b[0mexpanded"
    ],
    [
      0.000005,
      " from macro 'Malloc'\u001b[0m\r\n"
    ],
    [
      0.000017,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000092,
      "\u001b[1msvm.cpp:2156:36:"
    ],
    [
      0.000006,
      " \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion changes signedness: 'int' to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000009,
      "                svm_node **x = Malloc(svm_node *,l);\r\n\u001b[0;1;32m"
    ],
    [
      0.000003,
      "                               ~~~~~~~~~~~~~~~~~~^~\r\n\u001b[0m"
    ],
    [
      0.000002,
      "\u001b[1msvm.cpp"
    ],
    [
      0.000002,
      ":39:"
    ],
    [
      0.000002,
      "40: "
    ],
    [
      0.000002,
      "\u001b[0m\u001b[0;1;30m"
    ],
    [
      0.000002,
      "note: \u001b[0m"
    ],
    [
      0.000002,
      "expanded from"
    ],
    [
      0.000002,
      " macro"
    ],
    [
      0.000002,
      " 'Malloc'\u001b[0m"
    ],
    [
      0.000003,
      "\r\n"
    ],
    [
      0.000025,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n"
    ],
    [
      0.000003,
      "\u001b[0m"
    ],
    [
      0.000069,
      "\u001b[1msvm.cpp:2163:39"
    ],
    [
      0.000003,
      ": \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion"
    ],
    [
      0.000002,
      " changes "
    ],
    [
      0.000002,
      "signedness: "
    ],
    [
      0.000002,
      "'int' "
    ],
    [
      0.000004,
      "to\r\n"
    ],
    [
      0.000003,
      "      'unsigned long' [-Wsign-conversion]"
    ],
    [
      0.000002,
      "\u001b[0m\r\n"
    ],
    [
      0.000027,
      "                double *weighted_C = Malloc(double, nr_class);\r\n\u001b[0;1;32m                                     ~~~~~~~~~~~~~~~^~~~~~~~~"
    ],
    [
      0.000005,
      "\r\n\u001b[0m\u001b[1msvm.cpp:39:40: \u001b[0m\u001b[0;1;30m"
    ],
    [
      0.000003,
      "note: \u001b[0m"
    ],
    [
      0.000002,
      "expanded from"
    ],
    [
      0.000002,
      " macro"
    ],
    [
      0.000002,
      " 'Malloc'"
    ],
    [
      0.000003,
      "\u001b[0m\r\n"
    ],
    [
      0.000023,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^"
    ],
    [
      0.000003,
      "\r\n\u001b[0m"
    ],
    [
      0.000166,
      "\u001b[1msvm.cpp:2180:31: \u001b[0m\u001b[0;1;35mwarning"
    ],
    [
      0.000003,
      ": \u001b[0m\u001b[1mimplicit conversion changes signedness:"
    ],
    [
      0.000002,
      " 'int'"
    ],
    [
      0.000002,
      " to"
    ],
    [
      0.000002,
      "\r\n      "
    ],
    [
      0.000002,
      "'unsigned long'"
    ],
    [
      0.000002,
      " [-Wsign-conversion]"
    ],
    [
      0.000002,
      "\u001b[0m\r\n"
    ],
    [
      0.000022,
      "                bool *nonzero = Malloc(bool,l);\r\n\u001b[0;1;32m                                ~~~~~~~~~~~~^~\r\n\u001b[0m"
    ],
    [
      0.000003,
      "\u001b[1msvm.cpp"
    ],
    [
      0.000002,
      ":39:"
    ],
    [
      0.000002,
      "40:"
    ],
    [
      0.000002,
      " \u001b[0m\u001b[0;1;30m"
    ],
    [
      0.000002,
      "note: \u001b[0m"
    ],
    [
      0.000002,
      "expanded "
    ],
    [
      0.000002,
      "from macro"
    ],
    [
      0.000002,
      " 'Malloc'"
    ],
    [
      0.000002,
      "\u001b[0m\r\n"
    ],
    [
      0.000026,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n"
    ],
    [
      0.000003,
      "\u001b[0m"
    ],
    [
      0.000068,
      "\u001b[1msvm.cpp:2183:72: \u001b[0m\u001b[0;1;35m"
    ],
    [
      0.000005,
      "warning: \u001b[0m\u001b[1mimplicit conversion changes signedness: 'int' to"
    ],
    [
      0.000021,
      "\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000019,
      "  ...*f = Malloc(decision_function,nr_class*(nr_class-1)/2);\r\n\u001b[0;1;32m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\r\n\u001b[0m"
    ],
    [
      0.000004,
      "\u001b[1msvm.cpp:39:40: \u001b[0m\u001b[0;1;30mnote"
    ],
    [
      0.000002,
      ": \u001b[0mexpanded"
    ],
    [
      0.000002,
      " from"
    ],
    [
      0.000002,
      " macro"
    ],
    [
      0.000002,
      " 'Malloc'"
    ],
    [
      0.000002,
      "\u001b[0m\r\n"
    ],
    [
      0.000020,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n"
    ],
    [
      0.000003,
      "\u001b[0m"
    ],
    [
      0.000065,
      "\u001b[1msvm.cpp:2188:45: "
    ],
    [
      0.000005,
      "\u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit "
    ],
    [
      0.000009,
      "conversion changes "
    ],
    [
      0.000007,
      "signedness: 'int' to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000023,
      "                        probA=Malloc(double,nr_class*(nr_class-1)/2);\r\n\u001b[0;1;32m                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\r\n\u001b[0m"
    ],
    [
      0.000021,
      "\u001b[1msvm.cpp:39:40: \u001b[0m\u001b[0;1;30mnote: \u001b[0mexpanded from"
    ],
    [
      0.000004,
      " macro 'Malloc'\u001b[0m\r\n"
    ],
    [
      0.000018,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^"
    ],
    [
      0.000003,
      "\r\n\u001b[0m"
    ],
    [
      0.000085,
      "\u001b[1msvm.cpp:2189:45: \u001b[0m\u001b[0;1;35mwarning"
    ],
    [
      0.000005,
      ": \u001b[0m\u001b[1mimplicit conversion changes signedness: 'int' to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000018,
      "                        probB=Malloc(double,nr_class*(nr_class-1)/2);\r\n\u001b[0;1;32m                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~"
    ],
    [
      0.000005,
      "\r\n\u001b[0m\u001b[1m"
    ],
    [
      0.000002,
      "svm.cpp:"
    ],
    [
      0.000002,
      "39:"
    ],
    [
      0.000002,
      "40:"
    ],
    [
      0.000004,
      " \u001b[0m"
    ],
    [
      0.000002,
      "\u001b[0;1;30mnote"
    ],
    [
      0.000002,
      ": \u001b[0m"
    ],
    [
      0.000002,
      "expanded"
    ],
    [
      0.000002,
      " from"
    ],
    [
      0.000002,
      " macro"
    ],
    [
      0.000002,
      " 'Malloc'"
    ],
    [
      0.000002,
      "\u001b[0m\r\n"
    ],
    [
      0.000037,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000103,
      "\u001b[1msvm.cpp:"
    ],
    [
      0.000004,
      "2200:45: \u001b[0m\u001b[0;1;35mwarning: "
    ],
    [
      0.000002,
      "\u001b[0m\u001b[1m"
    ],
    [
      0.000002,
      "implicit "
    ],
    [
      0.000002,
      "conversion "
    ],
    [
      0.000002,
      "changes "
    ],
    [
      0.000002,
      "signedness: 'int'"
    ],
    [
      0.000002,
      " to"
    ],
    [
      0.000002,
      "\r\n      'unsigned long'"
    ],
    [
      0.000002,
      " [-Wsign-conversion]"
    ],
    [
      0.000002,
      "\u001b[0m\r\n"
    ],
    [
      0.000028,
      "                                sub_prob.x = Malloc(svm_node *,sub_prob.l);\r\n\u001b[0;1;32m                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\r\n\u001b[0m"
    ],
    [
      0.000004,
      "\u001b[1msvm.cpp:39:40: \u001b[0m\u001b[0;1;30mnote"
    ],
    [
      0.000002,
      ": \u001b[0mexpanded"
    ],
    [
      0.000002,
      " from"
    ],
    [
      0.000019,
      " macro 'Malloc'\u001b[0m\r\n"
    ],
    [
      0.000030,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000053,
      "\u001b[1msvm.cpp:"
    ],
    [
      0.000004,
      "2201:41: \u001b[0m\u001b[0;1;35mwarning: "
    ],
    [
      0.000002,
      "\u001b[0m\u001b[1m"
    ],
    [
      0.000002,
      "implicit conversion"
    ],
    [
      0.000002,
      " changes "
    ],
    [
      0.000004,
      "signedness: "
    ],
    [
      0.000002,
      "'int' to\r\n      "
    ],
    [
      0.000002,
      "'unsigned long' "
    ],
    [
      0.000002,
      "[-Wsign-conversion]\u001b[0m"
    ],
    [
      0.000002,
      "\r\n"
    ],
    [
      0.000031,
      "                                sub_prob.y = Malloc(double,sub_prob.l);\r\n\u001b[0;1;32m                                             ~~~~~~~~~~~~~~~~~~~~~~~^~\r\n\u001b[0m\u001b[1msvm.cpp:39:"
    ],
    [
      0.000005,
      "40: \u001b[0m\u001b[0;1;30mnote: \u001b[0m"
    ],
    [
      0.000003,
      "expanded from"
    ],
    [
      0.000003,
      " macro "
    ],
    [
      0.000003,
      "'Malloc'\u001b[0m"
    ],
    [
      0.000013,
      "\r\n"
    ],
    [
      0.000005,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n"
    ],
    [
      0.000002,
      "\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000301,
      "\u001b[1msvm.cpp:2233:29: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit "
    ],
    [
      0.000004,
      "conversion changes signedness: 'int' to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000051,
      "                model-\u003elabel = Malloc(int,nr_class);\r\n\u001b[0;1;32m                               ~~~~~~~~~~~^~~~~~~~~\r\n\u001b[0m\u001b[1msvm.cpp:39:40: \u001b[0m\u001b[0;1;30mnote"
    ],
    [
      0.000004,
      ": \u001b[0mexpanded from macro "
    ],
    [
      0.000002,
      "'Malloc'\u001b[0m\r\n"
    ],
    [
      0.000033,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000087,
      "\u001b[1msvm.cpp:2237"
    ],
    [
      0.000007,
      ":51: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion changes"
    ],
    [
      0.000003,
      " signedness: "
    ],
    [
      0.000002,
      "'int' "
    ],
    [
      0.000002,
      "to\r\n"
    ],
    [
      0.000002,
      "      'unsigned long'"
    ],
    [
      0.000021,
      " [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000015,
      "                model-\u003erho = Malloc(double,nr_class*(nr_class-1)/2);\r\n\u001b[0;1;32m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~"
    ],
    [
      0.000004,
      "\r\n\u001b[0m\u001b[1m"
    ],
    [
      0.000003,
      "svm.cpp:39:"
    ],
    [
      0.000006,
      "40: \u001b[0m"
    ],
    [
      0.000003,
      "\u001b[0;1;30mnote: \u001b[0mexpanded from macro"
    ],
    [
      0.000003,
      " 'Malloc'\u001b[0m\r\n"
    ],
    [
      0.000019,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^"
    ],
    [
      0.000004,
      "\r\n\u001b[0m"
    ],
    [
      0.000096,
      "\u001b[1msvm.cpp:2243:54: "
    ],
    [
      0.000005,
      "\u001b[0m"
    ],
    [
      0.000003,
      "\u001b[0;1;35mwarning: "
    ],
    [
      0.000003,
      "\u001b[0m\u001b[1mimplicit "
    ],
    [
      0.000003,
      "conversion changes "
    ],
    [
      0.000003,
      "signedness: 'int'"
    ],
    [
      0.000017,
      " "
    ],
    [
      0.000004,
      "to"
    ],
    [
      0.000003,
      "\r\n      "
    ],
    [
      0.000003,
      "'unsigned long' "
    ],
    [
      0.000003,
      "[-Wsign-conversion]\u001b[0m"
    ],
    [
      0.000003,
      "\r\n"
    ],
    [
      0.000061,
      "                        model-\u003eprobA = Malloc(double,nr_class*(nr_class-1)/2);\r\n\u001b[0;1;32m                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\r\n\u001b[0m"
    ],
    [
      0.000009,
      "\u001b[1msvm.cpp:39"
    ],
    [
      0.000003,
      ":"
    ],
    [
      0.000003,
      "40: "
    ],
    [
      0.000011,
      "\u001b[0m\u001b[0;1;30m"
    ],
    [
      0.000005,
      "note: \u001b[0mexpanded from macro 'Malloc'\u001b[0m"
    ],
    [
      0.000003,
      "\r\n"
    ],
    [
      0.000030,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n"
    ],
    [
      0.000005,
      "\u001b[0m"
    ],
    [
      0.000084,
      "\u001b[1msvm.cpp:2244"
    ],
    [
      0.000006,
      ":54: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion changes signedness: 'int' to\r\n"
    ],
    [
      0.000003,
      "      'unsigned long' [-Wsign-conversion]\u001b[0m"
    ],
    [
      0.000003,
      "\r\n"
    ],
    [
      0.000023,
      "                        model-\u003eprobB = Malloc(double,nr_class*(nr_class-1)/2);\r\n\u001b[0;1;32m                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~"
    ],
    [
      0.000015,
      "\r\n\u001b[0m\u001b[1m"
    ],
    [
      0.000003,
      "svm.cpp"
    ],
    [
      0.000012,
      ":"
    ],
    [
      0.000004,
      "39:"
    ],
    [
      0.000003,
      "40:"
    ],
    [
      0.000003,
      " \u001b[0m"
    ],
    [
      0.000002,
      "\u001b[0;1;30mnote"
    ],
    [
      0.000005,
      ": \u001b[0m"
    ],
    [
      0.000003,
      "expanded from macro"
    ],
    [
      0.000003,
      " 'Malloc'"
    ],
    [
      0.000003,
      "\u001b[0m\r\n"
    ],
    [
      0.000038,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^"
    ],
    [
      0.000005,
      "\r\n\u001b[0m"
    ],
    [
      0.000155,
      "\u001b[1msvm.cpp:2258:30"
    ],
    [
      0.000007,
      ": \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion changes signedness: 'int' to\r\n      'unsigned long' [-Wsign-conversion]"
    ],
    [
      0.000003,
      "\u001b[0m\r\n"
    ],
    [
      0.000018,
      "                int *nz_count = Malloc(int,nr_class);\r\n\u001b[0;1;32m                                ~~~~~~~~~~~^~~~~~~~~\r\n\u001b[0m"
    ],
    [
      0.000004,
      "\u001b[1msvm.cpp:39:40:"
    ],
    [
      0.000003,
      " \u001b[0m\u001b[0;1;30mnote"
    ],
    [
      0.000003,
      ": \u001b[0mexpanded"
    ],
    [
      0.000003,
      " from macro"
    ],
    [
      0.000003,
      " 'Malloc'\u001b[0m"
    ],
    [
      0.000002,
      "\r\n"
    ],
    [
      0.000021,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000035,
      "\u001b[1msvm.cpp:2259"
    ],
    [
      0.000003,
      ":27: \u001b[0m\u001b[0;1;35m"
    ],
    [
      0.000002,
      "warning: "
    ],
    [
      0.000002,
      "\u001b[0m\u001b[1m"
    ],
    [
      0.000002,
      "implicit"
    ],
    [
      0.000002,
      " conversion"
    ],
    [
      0.000002,
      " changes"
    ],
    [
      0.000002,
      " signedness:"
    ],
    [
      0.000002,
      " "
    ],
    [
      0.000002,
      "'int' "
    ],
    [
      0.000002,
      "to\r\n"
    ],
    [
      0.000002,
      "      'unsigned long'"
    ],
    [
      0.000002,
      " "
    ],
    [
      0.000003,
      "[-Wsign-conversion]\u001b[0m"
    ],
    [
      0.000002,
      "\r\n"
    ],
    [
      0.000024,
      "                model-\u003enSV = Malloc(int,nr_class);\r\n\u001b[0;1;32m                             ~~~~~~~~~~~^~~~~~~~~"
    ],
    [
      0.000005,
      "\r\n\u001b[0m\u001b[1msvm.cpp:"
    ],
    [
      0.000003,
      "39:40"
    ],
    [
      0.000003,
      ": \u001b[0m"
    ],
    [
      0.000003,
      "\u001b[0;1;30mnote"
    ],
    [
      0.000003,
      ": \u001b[0mexpanded"
    ],
    [
      0.000003,
      " from"
    ],
    [
      0.000003,
      " macro "
    ],
    [
      0.000003,
      "'Malloc'\u001b[0m"
    ],
    [
      0.000003,
      "\r\n"
    ],
    [
      0.000022,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n"
    ],
    [
      0.000004,
      "\u001b[0m"
    ],
    [
      0.000147,
      "\u001b[1msvm.cpp:2276:33: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion changes signedness: 'int' to\r\n      'unsigned long'"
    ],
    [
      0.000005,
      " [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000016,
      "                model-\u003eSV = Malloc(svm_node *,total_sv);\r\n\u001b[0;1;32m                            ~~~~~~~~~~~~~~~~~~^~~~~~~~~\r\n\u001b[0m"
    ],
    [
      0.000004,
      "\u001b[1msvm.cpp:39:40:"
    ],
    [
      0.000003,
      " \u001b[0m\u001b[0;1;30mnote"
    ],
    [
      0.000003,
      ": \u001b[0m"
    ],
    [
      0.000003,
      "expanded from"
    ],
    [
      0.000003,
      " macro"
    ],
    [
      0.000003,
      " 'Malloc'\u001b[0m"
    ],
    [
      0.000003,
      "\r\n"
    ],
    [
      0.000017,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000041,
      "\u001b[1msvm.cpp:2277"
    ],
    [
      0.000005,
      ":34: \u001b[0m\u001b[0;1;35mwarning: "
    ],
    [
      0.000003,
      "\u001b[0m\u001b[1mimplicit"
    ],
    [
      0.000003,
      " conversion "
    ],
    [
      0.000021,
      "changes signedness:"
    ],
    [
      0.000005,
      " 'int' to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000035,
      "                model-\u003esv_indices = Malloc(int,total_sv);\r\n\u001b[0;1;32m                                    ~~~~~~~~~~~^~~~~~~~~"
    ],
    [
      0.000005,
      "\r\n\u001b[0m\u001b[1msvm.cpp:"
    ],
    [
      0.000003,
      "39:40:"
    ],
    [
      0.000012,
      " \u001b[0m"
    ],
    [
      0.000011,
      "\u001b[0;1;30mnote: \u001b[0mexpanded from macro"
    ],
    [
      0.000004,
      " 'Malloc'\u001b[0m\r\n"
    ],
    [
      0.000025,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n"
    ],
    [
      0.000004,
      "\u001b[0m"
    ],
    [
      0.000112,
      "\u001b[1msvm.cpp:"
    ],
    [
      0.000007,
      "2286:30: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m"
    ],
    [
      0.000003,
      "\u001b[1mimplicit "
    ],
    [
      0.000003,
      "conversion changes"
    ],
    [
      0.000003,
      " signedness:"
    ],
    [
      0.000003,
      " 'int' "
    ],
    [
      0.000003,
      "to\r\n"
    ],
    [
      0.000003,
      "      'unsigned long' "
    ],
    [
      0.000003,
      "[-Wsign-conversion]"
    ],
    [
      0.000019,
      "\u001b[0m\r\n"
    ],
    [
      0.000013,
      "                int *nz_start = Malloc(int,nr_class);\r\n\u001b[0;1;32m                                ~~~~~~~~~~~^~~~~~~~~\r\n\u001b[0m"
    ],
    [
      0.000004,
      "\u001b[1msvm.cpp:39:40: \u001b[0m"
    ],
    [
      0.000002,
      "\u001b[0;1;30mnote: "
    ],
    [
      0.000002,
      "\u001b[0mexpanded"
    ],
    [
      0.000004,
      " "
    ],
    [
      0.000002,
      "from macro "
    ],
    [
      0.000002,
      "'Malloc'\u001b[0m"
    ],
    [
      0.000002,
      "\r\n"
    ],
    [
      0.000031,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000109,
      "\u001b[1msvm.cpp:2291"
    ],
    [
      0.000003,
      ":44: \u001b[0m\u001b[0;1;35mwarning: "
    ],
    [
      0.000002,
      "\u001b[0m\u001b[1m"
    ],
    [
      0.000002,
      "implicit"
    ],
    [
      0.000002,
      " conversion"
    ],
    [
      0.000003,
      " changes"
    ],
    [
      0.000016,
      " signedness: 'int' to"
    ],
    [
      0.000006,
      "\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000022,
      "                model-\u003esv_coef = Malloc(double *,nr_class-1);\r\n\u001b[0;1;32m                                 ~~~~~~~~~~~~~~~~~~~~~~~~^~~\r\n"
    ],
    [
      0.000014,
      "\u001b[0m\u001b[1msvm.cpp:39:40:"
    ],
    [
      0.000008,
      " \u001b[0m\u001b[0;1;30mnote: \u001b[0mexpanded from macro 'Malloc'\u001b[0m\r\n"
    ],
    [
      0.000021,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000059,
      "\u001b[1msvm.cpp:2293"
    ],
    [
      0.000007,
      ":38: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1m"
    ],
    [
      0.000003,
      "implicit conversion changes "
    ],
    [
      0.000003,
      "signedness: 'int'"
    ],
    [
      0.000003,
      " to"
    ],
    [
      0.000003,
      "\r\n      'unsigned long'"
    ],
    [
      0.000002,
      " [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000040,
      "                        model-\u003esv_coef[i] = Malloc(double,total_sv);\r\n\u001b[0;1;32m                                            ~~~~~~~~~~~~~~^~~~~~~~~\r\n\u001b[0m\u001b[1msvm.cpp:39:40: \u001b[0m\u001b[0;1;30mnote"
    ],
    [
      0.000015,
      ": \u001b[0mexpanded from macro 'Malloc'\u001b[0m\r\n"
    ],
    [
      0.000002,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))"
    ],
    [
      0.000005,
      "\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.001832,
      "\u001b[1msvm.cpp:2344:25: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion"
    ],
    [
      0.000004,
      " changes signedness: 'int' to\r\n      'unsigned long' "
    ],
    [
      0.000002,
      "[-Wsign-conversion]\u001b[0m"
    ],
    [
      0.000002,
      "\r\n"
    ],
    [
      0.000042,
      "        int *perm = Malloc(int,l);\r\n\u001b[0;1;32m                    ~~~~~~~~~~~^~\r\n\u001b[0m"
    ],
    [
      0.000005,
      "\u001b[1msvm.cpp:39:40: \u001b[0m"
    ],
    [
      0.000002,
      "\u001b[0;1;30mnote: "
    ],
    [
      0.000002,
      "\u001b[0mexpanded"
    ],
    [
      0.000002,
      " from "
    ],
    [
      0.000002,
      "macro "
    ],
    [
      0.000002,
      "'Malloc'\u001b[0m\r\n"
    ],
    [
      0.000020,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^"
    ],
    [
      0.000004,
      "\r\n\u001b[0m"
    ],
    [
      0.000108,
      "\u001b[1msvm.cpp:2351:33: \u001b[0m\u001b[0;1;35m"
    ],
    [
      0.000005,
      "warning: \u001b[0m\u001b[1mimplicit conversion changes "
    ],
    [
      0.000003,
      "signedness: 'int'"
    ],
    [
      0.000003,
      " to\r\n"
    ],
    [
      0.000003,
      "      'unsigned long' [-Wsign-conversion]"
    ],
    [
      0.000003,
      "\u001b[0m\r\n"
    ],
    [
      0.000022,
      "        fold_start = Malloc(int,nr_fold+1);\r\n\u001b[0;1;32m                     ~~~~~~~~~~~~~~~~~~^~~\r\n\u001b[0m"
    ],
    [
      0.000004,
      "\u001b[1msvm.cpp:39:40: "
    ],
    [
      0.000002,
      "\u001b[0m\u001b[0;1;30mnote: "
    ],
    [
      0.000002,
      "\u001b[0mexpanded "
    ],
    [
      0.000002,
      "from macro"
    ],
    [
      0.000002,
      " 'Malloc'"
    ],
    [
      0.000002,
      "\u001b[0m\r\n"
    ],
    [
      0.000056,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000253,
      "\u001b[1msvm.cpp:2363:32: \u001b[0m\u001b[0;1;35mwarning"
    ],
    [
      0.000004,
      ": \u001b[0m\u001b[1mimplicit conversion changes signedness: 'int' "
    ],
    [
      0.000002,
      "to\r\n      "
    ],
    [
      0.000002,
      "'unsigned long' "
    ],
    [
      0.000002,
      "[-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000034,
      "                int *fold_count = Malloc(int,nr_fold);\r\n\u001b[0;1;32m                                  ~~~~~~~~~~~^~~~~~~~\r\n\u001b[0m\u001b[1msvm.cpp:39:40: \u001b[0m\u001b[0;1;30mnote: \u001b[0mexpanded from "
    ],
    [
      0.000003,
      "macro 'Malloc'\u001b[0m\r\n"
    ],
    [
      0.000019,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000041,
      "\u001b[1msvm.cpp:2365:27: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m"
    ],
    [
      0.000004,
      "\u001b[1mimplicit conversion changes signedness:"
    ],
    [
      0.000002,
      " 'int' to"
    ],
    [
      0.000002,
      "\r\n      "
    ],
    [
      0.000002,
      "'unsigned long' [-Wsign-conversion]"
    ],
    [
      0.000002,
      "\u001b[0m\r\n"
    ],
    [
      0.000017,
      "                int *index = Malloc(int,l);\r\n\u001b[0;1;32m                             ~~~~~~~~~~~^~\r\n"
    ],
    [
      0.000003,
      "\u001b[0m\u001b[1m"
    ],
    [
      0.000002,
      "svm.cpp:"
    ],
    [
      0.000002,
      "39:"
    ],
    [
      0.000002,
      "40:"
    ],
    [
      0.000002,
      " \u001b[0m"
    ],
    [
      0.000002,
      "\u001b[0;1;30mnote"
    ],
    [
      0.000002,
      ": \u001b[0mexpanded"
    ],
    [
      0.000002,
      " from "
    ],
    [
      0.000002,
      "macro "
    ],
    [
      0.000002,
      "'Malloc'\u001b[0m\r\n"
    ],
    [
      0.000022,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^"
    ],
    [
      0.000005,
      "\r\n\u001b[0m"
    ],
    [
      0.000366,
      "\u001b[1msvm.cpp:2423:47: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit "
    ],
    [
      0.000004,
      "conversion changes signedness: 'int' to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000037,
      "                subprob.x = Malloc(struct svm_node*,subprob.l);\r\n\u001b[0;1;32m                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\r\n\u001b[0m"
    ],
    [
      0.000023,
      "\u001b[1msvm.cpp:39:40"
    ],
    [
      0.000005,
      ": \u001b[0m\u001b[0;1;30mnote: \u001b[0mexpanded from macro"
    ],
    [
      0.000003,
      " 'Malloc'\u001b[0m\r\n"
    ],
    [
      0.000034,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^"
    ],
    [
      0.000004,
      "\r\n\u001b[0m"
    ],
    [
      0.000065,
      "\u001b[1msvm.cpp:"
    ],
    [
      0.000004,
      "2424:37: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit"
    ],
    [
      0.000002,
      " conversion "
    ],
    [
      0.000002,
      "changes "
    ],
    [
      0.000004,
      "signedness: "
    ],
    [
      0.000027,
      "'int' to\r\n"
    ],
    [
      0.000006,
      "      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000003,
      "                subprob.y = Malloc(double,subprob.l);\r\n\u001b[0;1;32m                            ~~~~~~~~~~~~~~~~~~~~~~^~\r\n"
    ],
    [
      0.000002,
      "\u001b[0m"
    ],
    [
      0.000006,
      "\u001b[1msvm.cpp:39"
    ],
    [
      0.000002,
      ":40: "
    ],
    [
      0.000002,
      "\u001b[0m\u001b[0;1;30mnote"
    ],
    [
      0.000002,
      ": \u001b[0mexpanded"
    ],
    [
      0.000002,
      " from "
    ],
    [
      0.000002,
      "macro "
    ],
    [
      0.000002,
      "'Malloc'\u001b[0m\r\n"
    ],
    [
      0.000026,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000295,
      "\u001b[1msvm.cpp:2443:41: \u001b[0m\u001b[0;1;35mwarning"
    ],
    [
      0.000005,
      ": \u001b[0m\u001b[1mimplicit conversion changes signedness: 'int' "
    ],
    [
      0.000003,
      "to\r\n      'unsigned long'"
    ],
    [
      0.000003,
      " [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000029,
      "  ...double *prob_estimates=Malloc(double,svm_get_nr_class(submodel));\r\n\u001b[0;1;32m                            ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\u001b[0m"
    ],
    [
      0.000005,
      "\u001b[1msvm.cpp:39:40: \u001b[0m"
    ],
    [
      0.000003,
      "\u001b[0;1;30mnote: \u001b[0m"
    ],
    [
      0.000003,
      "expanded from "
    ],
    [
      0.000003,
      "macro 'Malloc'\u001b[0m"
    ],
    [
      0.000002,
      "\r\n"
    ],
    [
      0.000018,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.001715,
      "\u001b[1msvm.cpp:2525:34: \u001b[0m\u001b[0;1;35mwarning"
    ],
    [
      0.000003,
      ": \u001b[0m\u001b[1mimplicit conversion changes signedness: 'int'"
    ],
    [
      0.000002,
      " to"
    ],
    [
      0.000002,
      "\r\n      "
    ],
    [
      0.000002,
      "'unsigned long' "
    ],
    [
      0.000002,
      "[-Wsign-conversion]\u001b[0m"
    ],
    [
      0.000002,
      "\r\n"
    ],
    [
      0.000042,
      "                double *kvalue = Malloc(double,l);\r\n\u001b[0;1;32m                                 ~~~~~~~~~~~~~~^~\r\n\u001b[0m\u001b[1msvm.cpp:39"
    ],
    [
      0.000008,
      ":40: \u001b[0m\u001b[0;1;30mnote: \u001b[0mexpanded from macro 'Malloc'\u001b[0m\r\n"
    ],
    [
      0.000028,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000185,
      "\u001b[1msvm.cpp:2529:27"
    ],
    [
      0.000020,
      ": \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion"
    ],
    [
      0.000006,
      " changes signedness: 'int' to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000007,
      "                int *start = Malloc(int,nr_class);\r\n"
    ],
    [
      0.000003,
      "\u001b[0;1;32m                             ~~~~~~~~~~~^~~~~~~~~\r\n"
    ],
    [
      0.000002,
      "\u001b[0m"
    ],
    [
      0.000024,
      "\u001b[1msvm.cpp:39:40"
    ],
    [
      0.000004,
      ": \u001b[0m\u001b[0;1;30mnote: \u001b[0mexpanded from macro "
    ],
    [
      0.000003,
      "'Malloc'\u001b[0m"
    ],
    [
      0.000002,
      "\r\n"
    ],
    [
      0.000023,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m"
    ],
    [
      0.000003,
      "                                       ^\r\n\u001b[0m"
    ],
    [
      0.000173,
      "\u001b[1msvm.cpp:2534:26: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion "
    ],
    [
      0.000006,
      "changes signedness: 'int' to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000014,
      "                int *vote = Malloc(int,nr_class);\r\n\u001b[0;1;32m                            ~~~~~~~~~~~^~~~~~~~~\r\n"
    ],
    [
      0.000003,
      "\u001b[0m\u001b[1msvm.cpp"
    ],
    [
      0.000002,
      ":39:"
    ],
    [
      0.000002,
      "40: "
    ],
    [
      0.000002,
      "\u001b[0m\u001b[0;1;30mnote"
    ],
    [
      0.000003,
      ": \u001b[0mexpanded"
    ],
    [
      0.000003,
      " from macro"
    ],
    [
      0.000003,
      " 'Malloc'\u001b[0m\r\n"
    ],
    [
      0.000019,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000859,
      "\u001b[1msvm.cpp:2586:52: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit "
    ],
    [
      0.000005,
      "conversion changes signedness: 'int' to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000044,
      "                dec_values = Malloc(double, nr_class*(nr_class-1)/2);\r\n\u001b[0;1;32m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\r\n\u001b[0m\u001b[1msvm.cpp:"
    ],
    [
      0.000004,
      "39:40: \u001b[0m\u001b[0;1;30mnote"
    ],
    [
      0.000002,
      ": \u001b[0mexpanded"
    ],
    [
      0.000002,
      " from "
    ],
    [
      0.000002,
      "macro 'Malloc'"
    ],
    [
      0.000002,
      "\u001b[0m\r\n"
    ],
    [
      0.000021,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^"
    ],
    [
      0.000004,
      "\r\n\u001b[0m"
    ],
    [
      0.000383,
      "\u001b[1msvm.cpp:2600:60: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit "
    ],
    [
      0.000004,
      "conversion changes signedness: 'int' to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000020,
      "                double *dec_values = Malloc(double, nr_class*(nr_class-1)/2);\r\n\u001b[0;1;32m"
    ],
    [
      0.000003,
      "                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\r\n\u001b[0m"
    ],
    [
      0.000002,
      "\u001b[1msvm.cpp"
    ],
    [
      0.000002,
      ":39:"
    ],
    [
      0.000003,
      "40: "
    ],
    [
      0.000003,
      "\u001b[0m\u001b[0;1;30mnote: "
    ],
    [
      0.000016,
      "\u001b[0mexpanded from"
    ],
    [
      0.000005,
      " macro 'Malloc'\u001b[0m\r\n"
    ],
    [
      0.000032,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000079,
      "\u001b[1msvm.cpp"
    ],
    [
      0.000005,
      ":2604:"
    ],
    [
      0.000012,
      "42:"
    ],
    [
      0.000004,
      " \u001b[0m\u001b[0;1;35mwarning: "
    ],
    [
      0.000014,
      "\u001b[0m\u001b[1mimplicit "
    ],
    [
      0.000005,
      "conversion changes signedness: 'int' to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000030,
      "                double **pairwise_prob=Malloc(double *,nr_class);\r\n\u001b[0;1;32m"
    ],
    [
      0.000004,
      "                                       ~~~~~~~~~~~~~~~~^~~~~~~~~\r\n\u001b[0m"
    ],
    [
      0.000005,
      "\u001b[1msvm.cpp:39:40"
    ],
    [
      0.000003,
      ": \u001b[0m"
    ],
    [
      0.000003,
      "\u001b[0;1;30mnote: "
    ],
    [
      0.000002,
      "\u001b[0mexpanded"
    ],
    [
      0.000002,
      " from "
    ],
    [
      0.000002,
      "macro "
    ],
    [
      0.000002,
      "'Malloc'\u001b[0m"
    ],
    [
      0.000002,
      "\r\n"
    ],
    [
      0.000023,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000073,
      "\u001b[1msvm.cpp:2606"
    ],
    [
      0.000004,
      ":35: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit"
    ],
    [
      0.000003,
      " conversion "
    ],
    [
      0.000002,
      "changes "
    ],
    [
      0.000002,
      "signedness: "
    ],
    [
      0.000002,
      "'int' to"
    ],
    [
      0.000002,
      "\r\n      "
    ],
    [
      0.000002,
      "'unsigned long' [-Wsign-conversion]"
    ],
    [
      0.000020,
      "\u001b[0m\r\n"
    ],
    [
      0.000033,
      "                        pairwise_prob[i]=Malloc(double,nr_class);\r\n\u001b[0;1;32m                                         ~~~~~~~~~~~~~~^~~~~~~~~\r\n\u001b[0m"
    ],
    [
      0.000014,
      "\u001b[1msvm.cpp:39:40: \u001b[0m\u001b[0;1;30mnote: \u001b[0mexpanded from macro 'Malloc'\u001b[0m"
    ],
    [
      0.000002,
      "\r\n"
    ],
    [
      0.000018,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.002068,
      "\u001b[1msvm.cpp:2748:32: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion "
    ],
    [
      0.000004,
      "changes signedness: 'int' to\r\n      'size_t' (aka 'unsigned long') [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000035,
      "                line = (char *) realloc(line,max_line_len);\r\n\u001b[0;1;32m                                ~~~~~~~      ^~~~~~~~~~~~\r\n\u001b[0m"
    ],
    [
      0.000571,
      "\u001b[1msvm.cpp:2821:31: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion"
    ],
    [
      0.000003,
      " changes signedness: 'int' to\r\n      "
    ],
    [
      0.000002,
      "'unsigned long' "
    ],
    [
      0.000002,
      "[-Wsign-conversion]\u001b[0m"
    ],
    [
      0.000002,
      "\r\n"
    ],
    [
      0.000042,
      "                        model-\u003erho = Malloc(double,n);\r\n\u001b[0;1;32m                                     ~~~~~~~~~~~~~~^~\r\n\u001b[0m\u001b[1msvm.cpp:39:40: \u001b[0m\u001b[0;1;30mnote: \u001b[0m"
    ],
    [
      0.000003,
      "expanded from macro"
    ],
    [
      0.000002,
      " 'Malloc'"
    ],
    [
      0.000002,
      "\u001b[0m\r\n"
    ],
    [
      0.000031,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000113,
      "\u001b[1msvm.cpp:2828:30"
    ],
    [
      0.000005,
      ": \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion changes signedness: "
    ],
    [
      0.000002,
      "'int' to\r\n"
    ],
    [
      0.000002,
      "      'unsigned long' "
    ],
    [
      0.000002,
      "[-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000039,
      "                        model-\u003elabel = Malloc(int,n);\r\n\u001b[0;1;32m                                       ~~~~~~~~~~~^~\r\n"
    ],
    [
      0.000006,
      "\u001b[0m\u001b[1msvm.cpp:39:40: \u001b[0m\u001b[0;1;30mnote: \u001b[0mexpanded from macro 'Malloc'\u001b[0m\r\n"
    ],
    [
      0.000023,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m"
    ],
    [
      0.000003,
      "                                       ^\r\n\u001b[0m"
    ],
    [
      0.000159,
      "\u001b[1msvm.cpp:2835:33: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion changes signedness: 'int' to"
    ],
    [
      0.000005,
      "\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000010,
      "                        model-\u003eprobA = Malloc(double,n);\r\n\u001b[0;1;32m                                       ~~~~~~~~~~~~~~^~\r\n\u001b[0m"
    ],
    [
      0.000004,
      "\u001b[1msvm.cpp:39:"
    ],
    [
      0.000002,
      "40: \u001b[0m"
    ],
    [
      0.000002,
      "\u001b[0;1;30mnote: "
    ],
    [
      0.000271,
      "\u001b[0mexpanded from macro 'Malloc'\u001b[0m\r\n#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m\u001b[1msvm.cpp:2842:33: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion changes signedness: 'int' to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n                        model-\u003eprobB = Malloc(double,n);\r\n\u001b[0;1;32m                                       ~~~~~~~~~~~~~~^~\r\n\u001b[0m\u001b[1msvm.cpp:39:40: \u001b[0m\u001b[0;1;30mnote: \u001b[0mexpanded from macro 'Malloc'\u001b[0m\r\n#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000061,
      "\u001b[1msvm.cpp:2849:28: \u001b[0m\u001b[0;1;35mwarning: "
    ],
    [
      0.000007,
      "\u001b[0m\u001b[1mimplicit conversion changes signedness: 'int' to"
    ],
    [
      0.000003,
      "\r\n      'unsigned long' [-Wsign-conversion]"
    ],
    [
      0.000002,
      "\u001b[0m\r\n"
    ],
    [
      0.000019,
      "                        model-\u003enSV = Malloc(int,n);\r\n\u001b[0;1;32m                                     ~~~~~~~~~~~^~\r\n\u001b[0m"
    ],
    [
      0.000006,
      "\u001b[1msvm.cpp:39:40: \u001b[0m"
    ],
    [
      0.000004,
      "\u001b[0;1;30mnote: \u001b[0mexpanded"
    ],
    [
      0.000002,
      " from"
    ],
    [
      0.000002,
      " macro"
    ],
    [
      0.000002,
      " 'Malloc'"
    ],
    [
      0.000002,
      "\u001b[0m"
    ],
    [
      0.000002,
      "\r\n"
    ],
    [
      0.000029,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.001730,
      "\u001b[1msvm.cpp:2910:21: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion"
    ],
    [
      0.000006,
      " changes signedness: 'int' to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000035,
      "        line = Malloc(char,max_line_len);\r\n\u001b[0;1;32m               ~~~~~~~~~~~~^~~~~~~~~~~~~\r\n\u001b[0m\u001b[1msvm.cpp:39:40: \u001b[0m\u001b[0;1;30mnote: \u001b[0mexpanded"
    ],
    [
      0.000004,
      " from macro 'Malloc'\u001b[0m\r\n"
    ],
    [
      0.000033,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000153,
      "\u001b[1msvm.cpp:2930:35: "
    ],
    [
      0.000021,
      "\u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion changes signedness: 'int' to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n        model-\u003esv_coef = Malloc(double *,m);"
    ],
    [
      0.000003,
      "\r\n\u001b[0;1;32m                         ~~~~~~~~~~~~~~~~^~\r\n\u001b[0m"
    ],
    [
      0.000002,
      "\u001b[1msvm.cpp:"
    ],
    [
      0.000002,
      "39:40"
    ],
    [
      0.000002,
      ": \u001b[0m"
    ],
    [
      0.000002,
      "\u001b[0;1;30mnote: "
    ],
    [
      0.000002,
      "\u001b[0mexpanded "
    ],
    [
      0.000002,
      "from macro"
    ],
    [
      0.000002,
      " 'Malloc'\u001b[0m"
    ],
    [
      0.000002,
      "\r\n"
    ],
    [
      0.000021,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^"
    ],
    [
      0.000011,
      "\r\n\u001b[0m"
    ],
    [
      0.000057,
      "\u001b[1msvm.cpp:"
    ],
    [
      0.000004,
      "2933:37: \u001b[0m\u001b[0;1;35mwarning: "
    ],
    [
      0.000003,
      "\u001b[0m\u001b[1mimplicit"
    ],
    [
      0.000002,
      " conversion "
    ],
    [
      0.000002,
      "changes signedness:"
    ],
    [
      0.000002,
      " "
    ],
    [
      0.000013,
      "'int' to\r\n"
    ],
    [
      0.000003,
      "      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000021,
      "                model-\u003esv_coef[i] = Malloc(double,l);\r\n\u001b[0;1;32m"
    ],
    [
      0.000003,
      "                                    ~~~~~~~~~~~~~~^~\r\n\u001b[0m"
    ],
    [
      0.000002,
      "\u001b[1m"
    ],
    [
      0.000002,
      "svm.cpp:"
    ],
    [
      0.000002,
      "39:40"
    ],
    [
      0.000003,
      ": "
    ],
    [
      0.000003,
      "\u001b[0m\u001b[0;1;30mnote"
    ],
    [
      0.000005,
      ": \u001b[0mexpanded "
    ],
    [
      0.000003,
      "from macro 'Malloc'\u001b[0m"
    ],
    [
      0.000003,
      "\r\n"
    ],
    [
      0.000037,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000058,
      "\u001b[1msvm.cpp:"
    ],
    [
      0.000006,
      "2934:31: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1m"
    ],
    [
      0.000003,
      "implicit conversion "
    ],
    [
      0.000002,
      "changes "
    ],
    [
      0.000002,
      "signedness: "
    ],
    [
      0.000002,
      "'int' to"
    ],
    [
      0.000002,
      "\r\n      "
    ],
    [
      0.000002,
      "'unsigned long' [-Wsign-conversion]"
    ],
    [
      0.000002,
      "\u001b[0m\r\n"
    ],
    [
      0.000015,
      "        model-\u003eSV = Malloc(svm_node*,l);\r\n"
    ],
    [
      0.000003,
      "\u001b[0;1;32m                    ~~~~~~~~~~~~~~~~~^~\r\n\u001b[0m"
    ],
    [
      0.000005,
      "\u001b[1msvm.cpp:39"
    ],
    [
      0.000002,
      ":40"
    ],
    [
      0.000025,
      ": \u001b[0m\u001b[0;1;30mnote: \u001b[0mexpanded"
    ],
    [
      0.000005,
      " from macro 'Malloc'\u001b[0m\r\n"
    ],
    [
      0.000018,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n"
    ],
    [
      0.000003,
      "\u001b[0m"
    ],
    [
      0.000103,
      "\u001b[1msvm.cpp:2936:36: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1m"
    ],
    [
      0.000007,
      "implicit conversion changes signedness: 'int' to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000019,
      "        if(l\u003e0) x_space = Malloc(svm_node,elements);\r\n\u001b[0;1;32m                          ~~~~~~~~~~~~~~~~^~~~~~~~~\r\n\u001b[0m\u001b[1msvm.cpp:39:"
    ],
    [
      0.000004,
      "40: \u001b[0m\u001b[0;1;30mnote: \u001b[0m"
    ],
    [
      0.000002,
      "expanded from"
    ],
    [
      0.000002,
      " macro "
    ],
    [
      0.000002,
      "'Malloc'\u001b[0m"
    ],
    [
      0.000002,
      "\r\n"
    ],
    [
      0.000031,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.002249,
      "\u001b[1msvm.cpp:3101:27: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion changes signedness: 'int' to"
    ],
    [
      0.000005,
      "\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000009,
      "                int *label = Malloc(int,max_nr_class);\r\n\u001b[0;1;32m                             ~~~~~~~~~~~^~~~~~~~~~~~~\r\n"
    ],
    [
      0.000003,
      "\u001b[0m\u001b[1m"
    ],
    [
      0.000002,
      "svm.cpp:39"
    ],
    [
      0.000002,
      ":40:"
    ],
    [
      0.000002,
      " \u001b[0m\u001b[0;1;30m"
    ],
    [
      0.000002,
      "note: \u001b[0m"
    ],
    [
      0.000002,
      "expanded "
    ],
    [
      0.000002,
      "from macro"
    ],
    [
      0.000002,
      " 'Malloc'"
    ],
    [
      0.000002,
      "\u001b[0m\r\n"
    ],
    [
      0.000015,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m"
    ],
    [
      0.000003,
      "                                       ^\r\n\u001b[0m"
    ],
    [
      0.000040,
      "\u001b[1msvm.cpp:3102"
    ],
    [
      0.000004,
      ":27: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit"
    ],
    [
      0.000004,
      " conversion changes"
    ],
    [
      0.000003,
      " signedness: 'int' to"
    ],
    [
      0.000003,
      "\r\n      'unsigned long' "
    ],
    [
      0.000003,
      "[-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000017,
      "                int *count = Malloc(int,max_nr_class);\r\n\u001b[0;1;32m                             ~~~~~~~~~~~^~~~~~~~~~~~~"
    ],
    [
      0.000004,
      "\r\n\u001b[0m\u001b[1msvm.cpp:39"
    ],
    [
      0.000003,
      ":40: "
    ],
    [
      0.000003,
      "\u001b[0m\u001b[0;1;30mnote"
    ],
    [
      0.000003,
      ": \u001b[0mexpanded"
    ],
    [
      0.000003,
      " from "
    ],
    [
      0.000003,
      "macro 'Malloc'"
    ],
    [
      0.000003,
      "\u001b[0m\r\n"
    ],
    [
      0.000055,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000118,
      "\u001b[1msvm.cpp:3120:35:"
    ],
    [
      0.000004,
      " \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit "
    ],
    [
      0.000003,
      "conversion changes "
    ],
    [
      0.000003,
      "signedness: 'int' "
    ],
    [
      0.000003,
      "to\r\n      "
    ],
    [
      0.000002,
      "'unsigned long' [-Wsign-conversion]\u001b[0m"
    ],
    [
      0.000002,
      "\r\n"
    ],
    [
      0.000038,
      "  ...label = (int *)realloc(label,max_nr_class*sizeof(int));\r\n\u001b[0;1;32m                                  ^~~~~~~~~~~~~\r\n\u001b[0m"
    ],
    [
      0.000072,
      "\u001b[1msvm.cpp:3121:35: \u001b[0m\u001b[0;1;35m"
    ],
    [
      0.000005,
      "warning: \u001b[0m\u001b[1mimplicit conversion changes"
    ],
    [
      0.000002,
      " signedness:"
    ],
    [
      0.000002,
      " 'int' "
    ],
    [
      0.000002,
      "to\r\n      "
    ],
    [
      0.000002,
      "'unsigned long' [-Wsign-conversion]"
    ],
    [
      0.000017,
      "\u001b[0m\r\n"
    ],
    [
      0.000023,
      "  ...count = (int *)realloc(count,max_nr_class*sizeof(int));\r\n"
    ],
    [
      0.000003,
      "\u001b[0;1;32m                                  ^~~~~~~~~~~~~\r\n\u001b[0m"
    ],
    [
      0.001510,
      "\u001b[1msvm.cpp:24:43: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion changes signedness: 'int' "
    ],
    [
      0.000007,
      "to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000003,
      "        memcpy((void *)dst,(void *)src,sizeof(T)*n);\r\n"
    ],
    [
      0.000003,
      "\u001b[0;1;32m                                                ~^\r\n\u001b[0m"
    ],
    [
      0.000029,
      "\u001b[1msvm.cpp:276:2"
    ],
    [
      0.000004,
      ": \u001b[0m\u001b[0;1;30mnote: \u001b[0min"
    ],
    [
      0.000003,
      " instantiation of"
    ],
    [
      0.000015,
      " function template specialization\r\n      'clone\u003csvm_node *const, const svm_node *\u003e' requested"
    ],
    [
      0.000003,
      " here\u001b[0m\r\n"
    ],
    [
      0.000003,
      "        clone(x,x_,l);\r\n"
    ],
    [
      0.000003,
      "\u001b[0;1;32m        ^\r\n\u001b[0m"
    ],
    [
      0.000073,
      "\u001b[1msvm.cpp:24"
    ],
    [
      0.000004,
      ":43: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion changes "
    ],
    [
      0.000003,
      "signedness: 'int'"
    ],
    [
      0.000003,
      " to\r\n      "
    ],
    [
      0.000005,
      "'unsigned long' [-Wsign-conversion]\u001b[0m"
    ],
    [
      0.000003,
      "\r\n"
    ],
    [
      0.000016,
      "        memcpy((void *)dst,(void *)src,sizeof(T)*n);\r\n\u001b[0;1;32m                                                ~^"
    ],
    [
      0.000003,
      "\r\n\u001b[0m"
    ],
    [
      0.000002,
      "\u001b[1msvm.cpp"
    ],
    [
      0.000002,
      ":511:"
    ],
    [
      0.000002,
      "2: "
    ],
    [
      0.000003,
      "\u001b[0m\u001b[0;1;30mnote"
    ],
    [
      0.000003,
      ": \u001b[0min "
    ],
    [
      0.000002,
      "instantiation of "
    ],
    [
      0.000002,
      "function template"
    ],
    [
      0.000002,
      " specialization"
    ],
    [
      0.000002,
      "\r\n      'clone\u003cconst"
    ],
    [
      0.000002,
      " double, "
    ],
    [
      0.000002,
      "double\u003e' "
    ],
    [
      0.000002,
      "requested here"
    ],
    [
      0.000002,
      "\u001b[0m\r\n"
    ],
    [
      0.000014,
      "        clone(p, p_,l);\r\n\u001b[0;1;32m        ^"
    ],
    [
      0.000004,
      "\r\n\u001b[0m"
    ],
    [
      0.000047,
      "\u001b[1msvm.cpp:24:43: \u001b[0m\u001b[0;1;35mwarning: "
    ],
    [
      0.000006,
      "\u001b[0m\u001b[1mimplicit conversion changes signedness: 'int' to\r\n      'unsigned long'"
    ],
    [
      0.000003,
      " [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000020,
      "        memcpy((void *)dst,(void *)src,sizeof(T)*n);\r\n\u001b[0;1;32m"
    ],
    [
      0.000004,
      "                                                ~^\r\n\u001b[0m\u001b[1msvm.cpp:512:"
    ],
    [
      0.000002,
      "2: \u001b[0m"
    ],
    [
      0.000002,
      "\u001b[0;1;30mnote: "
    ],
    [
      0.000002,
      "\u001b[0min "
    ],
    [
      0.000002,
      "instantiation of"
    ],
    [
      0.000002,
      " function "
    ],
    [
      0.000005,
      "template specialization\r\n      'clone\u003cconst"
    ],
    [
      0.000002,
      " signed"
    ],
    [
      0.000002,
      " char,"
    ],
    [
      0.000002,
      " signed"
    ],
    [
      0.000002,
      " char\u003e'"
    ],
    [
      0.000002,
      " requested"
    ],
    [
      0.000002,
      " here\u001b[0m"
    ],
    [
      0.000002,
      "\r\n"
    ],
    [
      0.000019,
      "        clone(y, y_,l);\r\n\u001b[0;1;32m        ^\r\n\u001b[0m"
    ],
    [
      0.000046,
      "\u001b[1msvm.cpp:24:43"
    ],
    [
      0.000003,
      ": \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion changes"
    ],
    [
      0.000002,
      " signedness:"
    ],
    [
      0.000002,
      " 'int'"
    ],
    [
      0.000002,
      " to\r\n"
    ],
    [
      0.000002,
      "      'unsigned long' "
    ],
    [
      0.000002,
      "[-Wsign-conversion]\u001b[0m"
    ],
    [
      0.000002,
      "\r\n"
    ],
    [
      0.000042,
      "        memcpy((void *)dst,(void *)src,sizeof(T)*n);\r\n\u001b[0;1;32m                                                ~^\r\n\u001b[0m\u001b[1msvm.cpp:513:2: \u001b[0m\u001b[0;1;30mnote: \u001b[0min instantiation of"
    ],
    [
      0.000005,
      " function template specialization\r\n      'clone\u003cdouble, double\u003e' requested"
    ],
    [
      0.000002,
      " here"
    ],
    [
      0.000002,
      "\u001b[0m\r\n"
    ],
    [
      0.000019,
      "        clone(alpha,alpha_,l);\r\n\u001b[0;1;32m        ^\r\n\u001b[0m"
    ],
    [
      0.497421,
      "75 warnings generated.\r\n"
    ],
    [
      0.002037,
      "c++ -Wall -Wconversion -O3 -fPIC svm-train.c svm.o -o svm-train -lm\r\n"
    ],
    [
      0.005217,
      "clang: warning: treating 'c' input as 'c++' when in C++ mode, this behavior is deprecated\r\n"
    ],
    [
      0.013913,
      "\u001b[1msvm-train.c:75:32: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion changes signedness: "
    ],
    [
      0.000009,
      "'int' to\r\n      'size_t' (aka 'unsigned long') [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000020,
      "                line = (char *) realloc(line,max_line_len);\r\n\u001b[0;1;32m                                ~~~~~~~      ^~~~~~~~~~~~\r\n\u001b[0m"
    ],
    [
      0.000778,
      "\u001b[1msvm-train.c:128:38: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit "
    ],
    [
      0.000005,
      "conversion changes signedness: 'int' to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000030,
      "        double *target = Malloc(double,prob.l);\r\n\u001b[0;1;32m                         ~~~~~~~~~~~~~~~~~~~^~\r\n\u001b[0m"
    ],
    [
      0.000003,
      "\u001b[1msvm-train.c:7:40:"
    ],
    [
      0.000003,
      " \u001b[0m\u001b[0;1;30m"
    ],
    [
      0.000002,
      "note: \u001b[0m"
    ],
    [
      0.000002,
      "expanded from"
    ],
    [
      0.000002,
      " macro "
    ],
    [
      0.000002,
      "'Malloc'\u001b[0m"
    ],
    [
      0.000002,
      "\r\n"
    ],
    [
      0.000049,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.001136,
      "\u001b[1msvm-train.c:243:78: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion changes signedness: "
    ],
    [
      0.000007,
      "'int' to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000029,
      "  ...= (int *)realloc(param.weight_label,sizeof(int)*param.nr_weight);\r\n\u001b[0;1;32m                                                    ~~~~~~~^~~~~~~~~\r\n"
    ],
    [
      0.000004,
      "\u001b[0m"
    ],
    [
      0.000051,
      "\u001b[1msvm-train.c:244:72: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion changes "
    ],
    [
      0.000006,
      "signedness: 'int' to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000027,
      "  ...= (double *)realloc(param.weight,sizeof(double)*param.nr_weight);\r\n\u001b[0;1;32m                                                    ~~~~~~~^~~~~~~~~\r\n\u001b[0m"
    ],
    [
      0.000864,
      "\u001b[1msvm-train.c:296:21: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion changes signedness: 'int'"
    ],
    [
      0.000006,
      " to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000008,
      "        line = Malloc(char,max_line_len);\r\n\u001b[0;1;32m               ~~~~~~~~~~~~^~~~~~~~~~~~~\r\n"
    ],
    [
      0.000003,
      "\u001b[0m"
    ],
    [
      0.000002,
      "\u001b[1msvm-train.c:"
    ],
    [
      0.000002,
      "7:40"
    ],
    [
      0.000002,
      ": \u001b[0m"
    ],
    [
      0.000002,
      "\u001b[0;1;30mnote"
    ],
    [
      0.000002,
      ": \u001b[0mexpanded"
    ],
    [
      0.000002,
      " from "
    ],
    [
      0.000003,
      "macro 'Malloc'"
    ],
    [
      0.000003,
      "\u001b[0m\r\n"
    ],
    [
      0.000017,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n"
    ],
    [
      0.000003,
      "\u001b[0m"
    ],
    [
      0.000128,
      "\u001b[1msvm-train.c:314:30: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit"
    ],
    [
      0.000005,
      " conversion changes signedness: 'int' to\r\n      'unsigned long' "
    ],
    [
      0.000002,
      "[-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000018,
      "        prob.y = Malloc(double,prob.l);\r\n\u001b[0;1;32m                 ~~~~~~~~~~~~~~~~~~~^~"
    ],
    [
      0.000016,
      "\r\n\u001b[0m\u001b[1msvm-train.c:7:40: \u001b[0m"
    ],
    [
      0.000008,
      "\u001b[0;1;30mnote: \u001b[0mexpanded from macro 'Malloc'\u001b[0m\r\n"
    ],
    [
      0.000057,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^\r\n\u001b[0m"
    ],
    [
      0.000008,
      "\u001b[1m"
    ],
    [
      0.000003,
      "svm-train.c:315:41:"
    ],
    [
      0.000002,
      " \u001b[0m"
    ],
    [
      0.000006,
      "\u001b[0;1;35mwarning"
    ],
    [
      0.000003,
      ": \u001b[0m\u001b[1mimplicit "
    ],
    [
      0.000003,
      "conversion changes"
    ],
    [
      0.000003,
      " signedness: "
    ],
    [
      0.000002,
      "'int' "
    ],
    [
      0.000002,
      "to\r\n"
    ],
    [
      0.000002,
      "      'unsigned long' "
    ],
    [
      0.000002,
      "[-Wsign-conversion]\u001b[0m"
    ],
    [
      0.000002,
      "\r\n"
    ],
    [
      0.000021,
      "        prob.x = Malloc(struct svm_node *,prob.l);\r\n\u001b[0;1;32m                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\r\n\u001b[0m"
    ],
    [
      0.000022,
      "\u001b[1msvm-train.c:7:40: \u001b[0m\u001b[0;1;30mnote: "
    ],
    [
      0.000004,
      "\u001b[0mexpanded from macro"
    ],
    [
      0.000002,
      " 'Malloc'"
    ],
    [
      0.000003,
      "\u001b[0m\r\n"
    ],
    [
      0.000048,
      "#define Malloc(type,n) (type *)malloc((n)*sizeof(type))\r\n\u001b[0;1;32m                                       ^"
    ],
    [
      0.000004,
      "\r\n\u001b[0m"
    ],
    [
      0.034887,
      "7 warnings generated.\r\n"
    ],
    [
      0.013947,
      "c++ -Wall -Wconversion -O3 -fPIC svm-predict.c svm.o -o svm-predict -lm\r\n"
    ],
    [
      0.005246,
      "clang: warning: treating 'c' input as 'c++' when in C++ mode, this behavior is deprecated\r\n"
    ],
    [
      0.017190,
      "\u001b[1msvm-predict.c:31:32: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion changes "
    ],
    [
      0.000008,
      "signedness: 'int' to\r\n      'size_t' (aka 'unsigned long') [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000052,
      "                line = (char *) realloc(line,max_line_len);\r\n\u001b[0;1;32m                                ~~~~~~~      ^~~~~~~~~~~~\r\n\u001b[0m"
    ],
    [
      0.000665,
      "\u001b[1msvm-predict.c:63:31: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion changes signedness: 'int'"
    ],
    [
      0.000005,
      " to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000014,
      "                        int *labels=(int *) malloc(nr_class*sizeof(int));\r\n\u001b[0;1;32m"
    ],
    [
      0.000003,
      "                                                   ^~~~~~~~~\r\n\u001b[0m"
    ],
    [
      0.000037,
      "\u001b[1msvm-predict.c:"
    ],
    [
      0.000003,
      "65:39: "
    ],
    [
      0.000004,
      "\u001b[0m\u001b[0;1;35mwarning: "
    ],
    [
      0.000002,
      "\u001b[0m\u001b[1mimplicit"
    ],
    [
      0.000002,
      " conversion "
    ],
    [
      0.000002,
      "changes signedness:"
    ],
    [
      0.000002,
      " 'int'"
    ],
    [
      0.000002,
      " to\r\n"
    ],
    [
      0.000002,
      "      'unsigned long' "
    ],
    [
      0.000002,
      "[-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000039,
      "  ...prob_estimates = (double *) malloc(nr_class*sizeof(double));\r\n\u001b[0;1;32m                                        ^~~~~~~~~\r\n\u001b[0m"
    ],
    [
      0.000116,
      "\u001b[1msvm-predict.c:75:24: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion changes signedness: 'int' "
    ],
    [
      0.000004,
      "to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000014,
      "        line = (char *)malloc(max_line_len*sizeof(char));\r\n\u001b[0;1;32m"
    ],
    [
      0.000003,
      "                              ^~~~~~~~~~~~~\r\n\u001b[0m"
    ],
    [
      0.000172,
      "\u001b[1msvm-predict.c:96:39: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion changes signedness: 'int' "
    ],
    [
      0.000005,
      "to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.011001,
      "  ...x = (struct svm_node *) realloc(x,max_nr_attr*sizeof(struct svm_node));\r\n\u001b[0;1;32m                                       ^~~~~~~~~~~~\r\n\u001b[0m"
    ],
    [
      0.000012,
      "\u001b[1msvm-predict.c:217:33: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion changes signedness: 'int' to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n        x = (struct svm_node *) malloc(max_nr_attr*sizeof(struct svm_node));\r\n\u001b[0;1;32m                                       ^~~~~~~~~~~~\r\n\u001b[0m"
    ],
    [
      0.016348,
      "6 warnings generated.\r\n"
    ],
    [
      0.014865,
      "c++ -Wall -Wconversion -O3 -fPIC svm-scale.c -o svm-scale\r\n"
    ],
    [
      0.005465,
      "clang: warning: treating 'c' input as 'c++' when in C++ mode, this behavior is deprecated\r\n"
    ],
    [
      0.016222,
      "\u001b[1msvm-scale.c:94:25: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion changes signedness:"
    ],
    [
      0.000013,
      " 'int' to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000021,
      "        line = (char *) malloc(max_line_len*sizeof(char));\r\n\u001b[0;1;32m                               ^~~~~~~~~~~~~\r\n\u001b[0m"
    ],
    [
      0.000377,
      "\u001b[1msvm-scale.c:158:43: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion changes signedness: 'int'"
    ],
    [
      0.000004,
      " to\r\n      'unsigned long' [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000023,
      "        feature_max = (double *)malloc((max_index+1)* sizeof(double));\r\n\u001b[0;1;32m                                        ~~~~~~~~~^~ ~\r\n\u001b[0m"
    ],
    [
      0.000024,
      "\u001b[1msvm-scale.c:159:43"
    ],
    [
      0.000003,
      ": \u001b[0m\u001b[0;1;35mwarning: \u001b[0m"
    ],
    [
      0.000002,
      "\u001b[1mimplicit "
    ],
    [
      0.000002,
      "conversion changes"
    ],
    [
      0.000002,
      " signedness: "
    ],
    [
      0.000002,
      "'int' to"
    ],
    [
      0.000002,
      "\r\n      "
    ],
    [
      0.000002,
      "'unsigned long' [-Wsign-conversion]"
    ],
    [
      0.000002,
      "\u001b[0m\r\n"
    ],
    [
      0.000034,
      "        feature_min = (double *)malloc((max_index+1)* sizeof(double));\r\n\u001b[0;1;32m                                        ~~~~~~~~~^~ ~\r\n\u001b[0m"
    ],
    [
      0.002494,
      "\u001b[1msvm-scale.c:342:33: \u001b[0m\u001b[0;1;35mwarning: \u001b[0m\u001b[1mimplicit conversion changes signedness: 'int' to"
    ],
    [
      0.000004,
      "\r\n      'size_t' (aka 'unsigned long') [-Wsign-conversion]\u001b[0m\r\n"
    ],
    [
      0.000024,
      "                line = (char *) realloc(line, max_line_len);\r\n\u001b[0;1;32m                                ~~~~~~~       ^~~~~~~~~~~~\r\n\u001b[0m"
    ],
    [
      0.065927,
      "4 warnings generated.\r\n"
    ],
    [
      0.014197,
      "\u001b[1m\u001b[7m%\u001b[27m\u001b[1m\u001b[0m                                                                               \r \r"
    ],
    [
      0.000119,
      "\u001b]2;gabe@Gabes-MacBook-Pro: ~/Google Drive/svm_presentation/libsvm\u0007"
    ],
    [
      0.000008,
      "\u001b]1;..tation/libsvm\u0007"
    ],
    [
      0.016927,
      "\r\u001b[0m\u001b[27m\u001b[24m\u001b[J\u001b[01;32mâžœ \u001b[01;32m \u001b[36mlibsvm \u001b[01;34mgit:(\u001b[31mmaster\u001b[34m) \u001b[33mâœ—\u001b[00m\u001b[00m\u001b[01;34m \u001b[00m"
    ],
    [
      0.000006,
      "\u001b[K"
    ],
    [
      0.000104,
      "\u001b[?1h\u001b="
    ],
    [
      4.409672,
      "c"
    ],
    [
      0.071522,
      "\u0008cd"
    ],
    [
      0.104119,
      " "
    ],
    [
      0.175845,
      "."
    ],
    [
      0.136079,
      "."
    ],
    [
      0.159871,
      "\u001b[?1l\u001b\u003e"
    ],
    [
      0.000045,
      "\r\r\n"
    ],
    [
      0.000819,
      "\u001b]2;cd ..\u0007\u001b]1;cd\u0007"
    ],
    [
      0.016571,
      "\u001b[1m\u001b[7m%\u001b[27m\u001b[1m\u001b[0m                                                                               \r \r"
    ],
    [
      0.000009,
      "\u001b]2;gabe@Gabes-MacBook-Pro: ~/Google Drive/svm_presentation\u0007"
    ],
    [
      0.000061,
      "\u001b]1;.._presentation\u0007"
    ],
    [
      0.009179,
      "\r\u001b[0m\u001b[27m\u001b[24m\u001b[J\u001b[01;32mâžœ \u001b[01;32m \u001b[36msvm_presentation \u001b[01;34m\u001b[01;34m \u001b[00m"
    ],
    [
      0.000006,
      "\u001b[K"
    ],
    [
      0.000114,
      "\u001b[?1h\u001b="
    ],
    [
      1.805510,
      "l"
    ],
    [
      0.128018,
      "\u0008ll"
    ],
    [
      0.163850,
      "\u001b[?1l\u001b\u003e"
    ],
    [
      0.000052,
      "\r\r\n"
    ],
    [
      0.000618,
      "\u001b]2;ls -G -lh\u0007\u001b]1;ll\u0007"
    ],
    [
      0.003961,
      "total 0\r\n"
    ],
    [
      0.000158,
      "drwxr-xr-x   6 gabe  staff   204B Apr  1 12:58 \u001b[1m\u001b[36mdata\u001b[39;49m\u001b[0m\r\ndrwxr-xr-x  25 gabe  staff   850B Apr  1 12:59 \u001b[1m\u001b[36mlibsvm\u001b[39;49m\u001b[0m\r\n"
    ],
    [
      0.000005,
      "drwxr-xr-x   2 gabe  staff    68B Apr  1 12:58 \u001b[1m\u001b[36mmodels\u001b[39;49m\u001b[0m\r\ndrwxr-xr-x   4 gabe  staff   136B Mar 31 15:40 \u001b[1m\u001b[36mpresentation\u001b[39;49m\u001b[0m\r\n"
    ],
    [
      0.000415,
      "\u001b[1m\u001b[7m%\u001b[27m\u001b[1m\u001b[0m                                                                               \r \r"
    ],
    [
      0.000072,
      "\u001b]2;gabe@Gabes-MacBook-Pro: ~/Google Drive/svm_presentation\u0007"
    ],
    [
      0.000014,
      "\u001b]1;.._presentation\u0007"
    ],
    [
      0.010059,
      "\r\u001b[0m\u001b[27m\u001b[24m\u001b[J\u001b[01;32mâžœ \u001b[01;32m \u001b[36msvm_presentation \u001b[01;34m\u001b[01;34m \u001b[00m"
    ],
    [
      0.000006,
      "\u001b[K"
    ],
    [
      0.000151,
      "\u001b[?1h\u001b="
    ],
    [
      5.452450,
      "l"
    ],
    [
      0.119795,
      "\u0008ll"
    ],
    [
      0.072136,
      " "
    ],
    [
      0.111562,
      "d"
    ],
    [
      0.087977,
      "a"
    ],
    [
      0.104204,
      "t"
    ],
    [
      0.079845,
      "a"
    ],
    [
      0.527935,
      "\u001b[?1l\u001b\u003e"
    ],
    [
      0.000030,
      "\r\r\n"
    ],
    [
      0.000834,
      "\u001b]2;ls -G -lh data\u0007\u001b]1;ll\u0007"
    ],
    [
      0.005314,
      "total 176\r\n"
    ],
    [
      0.000292,
      "-rw-r-----@ 1 gabe  staff    34K Mar 31 14:39 heart\r\n"
    ],
    [
      0.000007,
      "-rw-r-----@ 1 gabe  staff   1.1K Mar 31 14:41 heart.txt\r\n-rw-r-----@ 1 gabe  staff    27K Mar 31 16:38 heart_scale\r\n"
    ],
    [
      0.000003,
      "-rw-r-----@ 1 gabe  staff    18K Mar 31 14:36 processed.cleveland.data\r\n"
    ],
    [
      0.000471,
      "\u001b[1m\u001b[7m%\u001b[27m\u001b[1m\u001b[0m                                                                               \r \r"
    ],
    [
      0.000155,
      "\u001b]2;gabe@Gabes-MacBook-Pro: ~/Google Drive/svm_presentation\u0007"
    ],
    [
      0.000013,
      "\u001b]1;.._presentation\u0007"
    ],
    [
      0.011181,
      "\r\u001b[0m\u001b[27m\u001b[24m\u001b[J\u001b[01;32mâžœ \u001b[01;32m \u001b[36msvm_presentation \u001b[01;34m\u001b[01;34m \u001b[00m"
    ],
    [
      0.000008,
      "\u001b[K"
    ],
    [
      0.000117,
      "\u001b[?1h\u001b="
    ],
    [
      2.766012,
      "w"
    ],
    [
      0.151351,
      "\u0008wc"
    ],
    [
      0.176707,
      " "
    ],
    [
      0.127544,
      "-"
    ],
    [
      0.119776,
      "l"
    ],
    [
      0.152719,
      " "
    ],
    [
      2.535484,
      "d"
    ],
    [
      0.063803,
      "a"
    ],
    [
      0.088196,
      "t"
    ],
    [
      0.087749,
      "a"
    ],
    [
      0.255515,
      "\u001b[1m/\u001b[0m"
    ],
    [
      0.778651,
      "\u0008\u001b[0m/h"
    ],
    [
      0.085489,
      "e"
    ],
    [
      0.054427,
      "a"
    ],
    [
      0.105983,
      "r"
    ],
    [
      0.172224,
      "t"
    ],
    [
      0.835977,
      "_"
    ],
    [
      0.175682,
      "s"
    ],
    [
      0.095663,
      "c"
    ],
    [
      0.148877,
      "ale\u001b[1m \u001b[0m"
    ],
    [
      1.395084,
      "\u0008\u001b[0m \u0008"
    ],
    [
      0.000039,
      "\u001b[?1l\u001b\u003e"
    ],
    [
      0.000062,
      "\r\r\n"
    ],
    [
      0.000826,
      "\u001b]2;wc -l data/heart_scale\u0007\u001b]1;wc\u0007"
    ],
    [
      0.002782,
      "     270 data/heart_scale\r\n"
    ],
    [
      0.000266,
      "\u001b[1m\u001b[7m%\u001b[27m\u001b[1m\u001b[0m                                                                               \r \r"
    ],
    [
      0.000082,
      "\u001b]2;gabe@Gabes-MacBook-Pro: ~/Google Drive/svm_presentation\u0007"
    ],
    [
      0.000006,
      "\u001b]1;.._presentation\u0007"
    ],
    [
      0.010380,
      "\r\u001b[0m\u001b[27m\u001b[24m\u001b[J\u001b[01;32mâžœ \u001b[01;32m \u001b[36msvm_presentation \u001b[01;34m\u001b[01;34m \u001b[00m\u001b[K"
    ],
    [
      0.000119,
      "\u001b[?1h\u001b="
    ],
    [
      3.738059,
      "h"
    ],
    [
      0.047648,
      "\u0008he"
    ],
    [
      0.071906,
      "a"
    ],
    [
      0.095871,
      "d"
    ],
    [
      0.176484,
      " "
    ],
    [
      0.231378,
      "-"
    ],
    [
      0.376203,
      "1"
    ],
    [
      1.167704,
      "7"
    ],
    [
      0.072172,
      "0"
    ],
    [
      0.120441,
      " "
    ],
    [
      1.575465,
      "d"
    ],
    [
      0.080166,
      "a"
    ],
    [
      0.080061,
      "t"
    ],
    [
      0.095893,
      "a"
    ],
    [
      0.151947,
      "/"
    ],
    [
      0.304267,
      "h"
    ],
    [
      0.047482,
      "e"
    ],
    [
      0.056254,
      "a"
    ],
    [
      0.079738,
      "r"
    ],
    [
      0.155795,
      "t"
    ],
    [
      0.844479,
      "_"
    ],
    [
      0.167837,
      "s"
    ],
    [
      0.120310,
      "c"
    ],
    [
      0.147547,
      "ale\u001b[1m \u001b[0m"
    ],
    [
      1.140536,
      "\u0008\u001b[0m \u003e"
    ],
    [
      0.159687,
      " "
    ],
    [
      0.456091,
      "d"
    ],
    [
      0.128026,
      "a"
    ],
    [
      0.047488,
      "t"
    ],
    [
      0.120340,
      "a"
    ],
    [
      1.255647,
      "/"
    ],
    [
      1.720801,
      "h"
    ],
    [
      0.138510,
      "e"
    ],
    [
      0.061236,
      "a"
    ],
    [
      0.063661,
      "r"
    ],
    [
      0.184107,
      "t"
    ],
    [
      0.175886,
      "."
    ],
    [
      0.192119,
      "t"
    ],
    [
      0.074283,
      "r"
    ],
    [
      0.077500,
      "a"
    ],
    [
      0.152064,
      "i"
    ],
    [
      0.088260,
      "n"
    ],
    [
      0.103750,
      "i"
    ],
    [
      0.080108,
      "n"
    ],
    [
      0.127877,
      "g"
    ],
    [
      4.807789,
      "\u001b[?1l\u001b\u003e"
    ],
    [
      0.000034,
      "\r\r\n"
    ],
    [
      0.000885,
      "\u001b]2;head -170 data/heart_scale \u003e data/heart.training\u0007\u001b]1;head\u0007"
    ],
    [
      0.003572,
      "\u001b[1m\u001b[7m%\u001b[27m\u001b[1m\u001b[0m                                                                               \r \r"
    ],
    [
      0.000103,
      "\u001b]2;gabe@Gabes-MacBook-Pro: ~/Google Drive/svm_presentation\u0007"
    ],
    [
      0.000009,
      "\u001b]1;.._presentation\u0007"
    ],
    [
      0.011248,
      "\r\u001b[0m\u001b[27m\u001b[24m\u001b[J\u001b[01;32mâžœ \u001b[01;32m \u001b[36msvm_presentation \u001b[01;34m\u001b[01;34m \u001b[00m"
    ],
    [
      0.000006,
      "\u001b[K"
    ],
    [
      0.000087,
      "\u001b[?1h\u001b="
    ],
    [
      1.928041,
      "t"
    ],
    [
      0.079766,
      "\u0008ta"
    ],
    [
      0.072209,
      "i"
    ],
    [
      0.063609,
      "l"
    ],
    [
      0.104784,
      " "
    ],
    [
      0.111534,
      "-"
    ],
    [
      0.428590,
      "1"
    ],
    [
      0.091538,
      "0"
    ],
    [
      0.127877,
      "0"
    ],
    [
      0.296259,
      " "
    ],
    [
      0.687178,
      "d"
    ],
    [
      0.104519,
      "a"
    ],
    [
      0.079947,
      "t"
    ],
    [
      0.104186,
      "a"
    ],
    [
      0.439886,
      "/"
    ],
    [
      0.316472,
      "h"
    ],
    [
      0.048106,
      "e"
    ],
    [
      0.061194,
      "a"
    ],
    [
      0.092709,
      "r"
    ],
    [
      0.174742,
      "t"
    ],
    [
      0.634654,
      "_"
    ],
    [
      0.184023,
      "s"
    ],
    [
      0.128214,
      "c"
    ],
    [
      0.138211,
      "ale\u001b[1m \u001b[0m"
    ],
    [
      3.255187,
      "\u0008\u001b[0m \u003e"
    ],
    [
      0.134655,
      " "
    ],
    [
      0.183755,
      "d"
    ],
    [
      0.087975,
      "a"
    ],
    [
      0.082713,
      "t"
    ],
    [
      0.069148,
      "a"
    ],
    [
      0.188766,
      "\u001b[1m/\u001b[0m"
    ],
    [
      0.803635,
      "\u0008\u001b[0m/h"
    ],
    [
      0.079565,
      "e"
    ],
    [
      0.048083,
      "a"
    ],
    [
      0.559907,
      "r"
    ],
    [
      0.216089,
      "t"
    ],
    [
      0.152024,
      "."
    ],
    [
      0.185010,
      "v"
    ],
    [
      0.078705,
      "a"
    ],
    [
      0.121320,
      "l"
    ],
    [
      0.054823,
      "i"
    ],
    [
      0.054661,
      "d"
    ],
    [
      0.065434,
      "a"
    ],
    [
      0.079721,
      "t"
    ],
    [
      0.056250,
      "i"
    ],
    [
      0.051048,
      "o"
    ],
    [
      0.139003,
      "n"
    ],
    [
      1.089744,
      "\u001b[?1l\u001b\u003e"
    ],
    [
      0.000072,
      "\r\r\n"
    ],
    [
      0.000852,
      "\u001b]2;tail -100 data/heart_scale \u003e data/heart.validation\u0007\u001b]1;tail\u0007"
    ],
    [
      0.004539,
      "\u001b[1m\u001b[7m%\u001b[27m\u001b[1m\u001b[0m                                                                               \r \r"
    ],
    [
      0.000100,
      "\u001b]2;gabe@Gabes-MacBook-Pro: ~/Google Drive/svm_presentation\u0007"
    ],
    [
      0.000012,
      "\u001b]1;.._presentation\u0007"
    ],
    [
      0.011966,
      "\r\u001b[0m\u001b[27m\u001b[24m\u001b[J\u001b[01;32mâžœ \u001b[01;32m \u001b[36msvm_presentation \u001b[01;34m\u001b[01;34m \u001b[00m\u001b[K"
    ],
    [
      0.000073,
      "\u001b[?1h\u001b="
    ],
    [
      4.280296,
      "c"
    ],
    [
      0.069917,
      "\u0008cd"
    ],
    [
      0.096443,
      " "
    ],
    [
      0.151658,
      "l"
    ],
    [
      0.063921,
      "i"
    ],
    [
      0.104218,
      "b"
    ],
    [
      0.226715,
      "svm\u001b[1m/\u001b[0m"
    ],
    [
      0.717274,
      "\u0008\u001b[0m \u0008"
    ],
    [
      0.000085,
      "\u001b[?1l\u001b\u003e"
    ],
    [
      0.000065,
      "\r\r\n"
    ],
    [
      0.001867,
      "\u001b]2;cd libsvm\u0007\u001b]1;cd\u0007"
    ],
    [
      0.017851,
      "\u001b[1m\u001b[7m%\u001b[27m\u001b[1m\u001b[0m                                                                               \r \r"
    ],
    [
      0.000035,
      "\u001b]2;gabe@Gabes-MacBook-Pro: ~/Google Drive/svm_presentation/libsvm\u0007"
    ],
    [
      0.000015,
      "\u001b]1;..tation/libsvm\u0007"
    ],
    [
      0.017260,
      "\r\u001b[0m\u001b[27m\u001b[24m\u001b[J\u001b[01;32mâžœ \u001b[01;32m \u001b[36mlibsvm \u001b[01;34mgit:(\u001b[31mmaster\u001b[34m) \u001b[33mâœ—\u001b[00m\u001b[00m\u001b[01;34m \u001b[00m"
    ],
    [
      0.000007,
      "\u001b[K"
    ],
    [
      0.000082,
      "\u001b[?1h\u001b="
    ],
    [
      8.698976,
      "."
    ],
    [
      0.015414,
      "\u0008./"
    ],
    [
      0.703859,
      "s"
    ],
    [
      0.055913,
      "v"
    ],
    [
      0.104198,
      "m"
    ],
    [
      0.311793,
      "-"
    ],
    [
      0.424064,
      "t"
    ],
    [
      0.015903,
      "r"
    ],
    [
      0.111935,
      "a"
    ],
    [
      0.286393,
      "in\u001b[1m \u001b[0m"
    ],
    [
      2.515332,
      "\u0008\u001b[0m \u0008"
    ],
    [
      0.000057,
      "\u001b[?1l\u001b\u003e"
    ],
    [
      0.000061,
      "\r\r\n"
    ],
    [
      0.001448,
      "\u001b]2;./svm-train\u0007"
    ],
    [
      0.000008,
      "\u001b]1;./svm-train\u0007"
    ],
    [
      0.003126,
      "Usage: svm-train [options] training_set_file [model_file]\r\noptions:\r\n-s svm_type : set type of SVM (default 0)\r\n\t0 -- C-SVC\t\t(multi-class classification)\r\n\t1 -- nu-SVC\t\t(multi-class classification)\r\n\t2 -- one-class SVM\r\n\t3 -- epsilon-SVR\t(regression)\r\n\t4 -- nu-SVR\t\t(regression)\r\n-t kernel_type : set type of kernel function (default 2)\r\n\t0 -- linear: u'*v\r\n\t1 -- polynomial: (gamma*u'*v + coef0)^degree\r\n\t2 -- radial basis function: exp(-gamma*|u-v|^2)\r\n\t3 -- sigmoid: tanh(gamma*u'*v + coef0)\r\n\t4 -- precomputed kernel (kernel values in training_set_file)\r\n-d degree : set degree in kernel function (default 3)\r\n-g gamma : set gamma in kernel function (default 1/num_features)\r\n-r coef0 : set coef0 in kernel function (default 0)\r\n-c cost : set the parameter C of C-SVC, epsilon-SVR, and nu-SVR (default 1)\r\n-n nu : set the parameter nu of nu-SVC, one-class SVM, and nu-SVR (default 0.5)\r\n-p epsilon : set the epsilon in loss function of epsilon-SVR (default 0.1)\r\n-m cachesize : set cache memory size in MB (default 100)\r"
    ],
    [
      0.000011,
      "\r\n-e epsilon : set tolerance of termination criterion (default 0.001)\r\n-h shrinking : whether to use the shrinking heuristics, 0 or 1 (default 1)\r\n-b probability_estimates : whether to train a SVC or SVR model for probability estimates, 0 or 1 (default 0)\r\n-wi weight : set the parameter C of class i to weight*C, for C-SVC (default 1)\r\n-v n: n-fold cross validation mode\r\n-q : quiet mode (no outputs)\r\n"
    ],
    [
      0.000324,
      "\u001b[1m\u001b[7m%\u001b[27m\u001b[1m\u001b[0m                                                                               \r \r"
    ],
    [
      0.000109,
      "\u001b]2;gabe@Gabes-MacBook-Pro: ~/Google Drive/svm_presentation/libsvm\u0007\u001b]1;..tation/libsvm\u0007"
    ],
    [
      0.016537,
      "\r\u001b[0m\u001b[27m\u001b[24m\u001b[J\u001b[01;31mâžœ \u001b[27m\u001b[01;32m \u001b[36mlibsvm \u001b[01;34mgit:(\u001b[31mmaster\u001b[34m) \u001b[33mâœ—\u001b[00m\u001b[00m\u001b[01;34m \u001b[00m"
    ],
    [
      0.000005,
      "\u001b[K"
    ],
    [
      0.000064,
      "\u001b[?1h\u001b="
    ],
    [
      9.121127,
      "."
    ],
    [
      0.055105,
      "\u0008./"
    ],
    [
      0.111826,
      "s"
    ],
    [
      0.064051,
      "v"
    ],
    [
      0.096023,
      "m"
    ],
    [
      0.496075,
      "-"
    ],
    [
      0.095630,
      "t"
    ],
    [
      0.072594,
      "r"
    ],
    [
      0.057148,
      "a"
    ],
    [
      0.338168,
      "in\u001b[1m \u001b[0m"
    ],
    [
      2.356302,
      "\u0008\u001b[0m -"
    ],
    [
      0.143967,
      "t"
    ],
    [
      0.712239,
      " "
    ],
    [
      0.143719,
      "0"
    ],
    [
      1.314304,
      " "
    ],
    [
      0.517676,
      "."
    ],
    [
      0.135949,
      "."
    ],
    [
      0.159910,
      "/"
    ],
    [
      0.196974,
      "d"
    ],
    [
      0.050950,
      "a"
    ],
    [
      0.348820,
      "ta\u001b[1m/\u001b[0m"
    ],
    [
      1.197082,
      "\u0008\u001b[0m/h"
    ],
    [
      0.077818,
      "e"
    ],
    [
      0.032211,
      "a"
    ],
    [
      0.096064,
      "r"
    ],
    [
      0.149176,
      "t"
    ],
    [
      0.644204,
      "."
    ],
    [
      0.094399,
      "t"
    ],
    [
      0.088236,
      "r"
    ],
    [
      0.220846,
      "aining\u001b[1m \u001b[0m"
    ],
    [
      0.874789,
      "\u0008\u001b[0m \u0008"
    ],
    [
      0.000046,
      "\u001b[?1l\u001b\u003e"
    ],
    [
      0.000056,
      "\r\r\n"
    ],
    [
      0.001371,
      "\u001b]2;./svm-train -t 0 ../data/heart.training\u0007\u001b]1;./svm-train\u0007"
    ],
    [
      0.004920,
      "."
    ],
    [
      0.000078,
      "."
    ],
    [
      0.000090,
      "."
    ],
    [
      0.000054,
      "."
    ],
    [
      0.000051,
      "."
    ],
    [
      0.000066,
      "."
    ],
    [
      0.000069,
      "*."
    ],
    [
      0.000053,
      "."
    ],
    [
      0.000035,
      "*"
    ],
    [
      0.000004,
      "\r\noptimization finished, #iter = 1465\r\n"
    ],
    [
      0.000043,
      "nu = 0.357591\r\nobj = -58.073474, rho = -1.351193\r\n"
    ],
    [
      0.000005,
      "nSV = 66, nBSV = 54\r\nTotal nSV = 66\r\n"
    ],
    [
      0.000995,
      "\u001b[1m\u001b[7m%\u001b[27m\u001b[1m\u001b[0m                                                                               \r \r"
    ],
    [
      0.000094,
      "\u001b]2;gabe@Gabes-MacBook-Pro: ~/Google Drive/svm_presentation/libsvm\u0007"
    ],
    [
      0.000039,
      "\u001b]1;..tation/libsvm\u0007"
    ],
    [
      0.017119,
      "\r\u001b[0m\u001b[27m\u001b[24m\u001b[J\u001b[01;32mâžœ \u001b[01;32m \u001b[36mlibsvm \u001b[01;34mgit:(\u001b[31mmaster\u001b[34m) \u001b[33mâœ—\u001b[00m\u001b[00m\u001b[01;34m \u001b[00m"
    ],
    [
      0.000005,
      "\u001b[K"
    ],
    [
      0.000079,
      "\u001b[?1h\u001b="
    ],
    [
      3.174005,
      "l"
    ],
    [
      0.064976,
      "\u0008ls"
    ],
    [
      0.104209,
      " "
    ],
    [
      0.071631,
      "-"
    ],
    [
      0.063798,
      "l"
    ],
    [
      0.048194,
      "t"
    ],
    [
      0.057952,
      "r"
    ],
    [
      1.022069,
      "\u001b[?1l\u001b\u003e"
    ],
    [
      0.000050,
      "\r\r\n"
    ],
    [
      0.000758,
      "\u001b]2;ls -G -ltr\u0007\u001b]1;ls\u0007"
    ],
    [
      0.005620,
      "total 976\r\n"
    ],
    [
      0.000170,
      "drwxr-xr-x  11 gabe  staff    374 Apr  1 12:59 \u001b[1m\u001b[36mwindows\u001b[39;49m\u001b[0m\r\n"
    ],
    [
      0.000005,
      "drwxr-xr-x   7 gabe  staff    238 Apr  1 12:59 \u001b[1m\u001b[36mtools\u001b[39;49m\u001b[0m\r\n"
    ],
    [
      0.000003,
      "-rw-r--r--   1 gabe  staff   3382 Apr  1 12:59 svm.h\r\n"
    ],
    [
      0.000020,
      "-rw-r--r--   1 gabe  staff    477 Apr  1 12:59 svm.def\r\n-rw-r--r--   1 gabe  staff  64702 Apr  1 12:59 svm.cpp\r\n"
    ],
    [
      0.000007,
      "-rw-r--r--   1 gabe  staff   8986 Apr  1 12:59 svm-train.c\r\ndrwxr-xr-x   5 gabe  staff    170 Apr  1 12:59 \u001b[1m\u001b[36msvm-toy\u001b[39;49m\u001b[0m\r\n-rw-r--r--   1 gabe  staff   8504 Apr  1 12:59 svm-scale.c\r\n"
    ],
    [
      0.000004,
      "-rw-r--r--   1 gabe  staff   5536 Apr  1 12:59 svm-predict.c\r\n"
    ],
    [
      0.000011,
      "drwxr-xr-x   6 gabe  staff    204 Apr  1 12:59 \u001b[1m\u001b[36mpython\u001b[39;49m\u001b[0m\r\n"
    ],
    [
      0.000004,
      "drwxr-xr-x  11 gabe  staff    374 Apr  1 12:59 \u001b[1m\u001b[36mmatlab\u001b[39;49m\u001b[0m\r\n"
    ],
    [
      0.000009,
      "drwxr-xr-x  10 gabe  staff    340 Apr  1 12:59 \u001b[1m\u001b[36mjava\u001b[39;49m\u001b[0m\r\n"
    ],
    [
      0.000003,
      "-rw-r--r--   1 gabe  staff  27670 Apr  1 12:59 heart_scale\r\n"
    ],
    [
      0.000010,
      "-rw-r--r--   1 gabe  staff  28544 Apr  1 12:59 README\r\n-rw-r--r--   1 gabe  staff   1084 Apr  1 12:59 Makefile.win\r\n"
    ],
    [
      0.000003,
      "-rw-r--r--   1 gabe  staff    732 Apr  1 12:59 Makefile\r\n"
    ],
    [
      0.000007,
      "-rw-r--r--   1 gabe  staff  78969 Apr  1 12:59 FAQ.html\r\n"
    ],
    [
      0.000003,
      "-rw-r--r--   1 gabe  staff   1497 Apr  1 12:59 COPYRIGHT\r\n"
    ],
    [
      0.000003,
      "-rw-r--r--   1 gabe  staff  70160 Apr  1 12:59 svm.o\r\n"
    ],
    [
      0.000052,
      "-rwxr-xr-x   1 gabe  staff  68476 Apr  1 12:59 \u001b[31msvm-train\u001b[39;49m\u001b[0m\r\n"
    ],
    [
      0.000005,
      "-rwxr-xr-x   1 gabe  staff  18808 Apr  1 12:59 \u001b[31msvm-scale\u001b[39;49m\u001b[0m\r\n-rwxr-xr-x   1 gabe  staff  68068 Apr  1 12:59 \u001b[31msvm-predict\u001b[39;49m\u001b[0m\r\n-rw-r--r--   1 gabe  staff   7006 Apr  1 13:01 heart.training.model\r\n"
    ],
    [
      0.000364,
      "\u001b[1m\u001b[7m%\u001b[27m\u001b[1m\u001b[0m                                                                               \r \r"
    ],
    [
      0.000174,
      "\u001b]2;gabe@Gabes-MacBook-Pro: ~/Google Drive/svm_presentation/libsvm\u0007"
    ],
    [
      0.000007,
      "\u001b]1;..tation/libsvm\u0007"
    ],
    [
      0.018307,
      "\r\u001b[0m\u001b[27m\u001b[24m\u001b[J\u001b[01;32mâžœ \u001b[01;32m \u001b[36mlibsvm \u001b[01;34mgit:(\u001b[31mmaster\u001b[34m) \u001b[33mâœ—\u001b[00m\u001b[00m\u001b[01;34m \u001b[00m"
    ],
    [
      0.000049,
      "\u001b[K"
    ],
    [
      0.000100,
      "\u001b[?1h\u001b="
    ],
    [
      2.366663,
      "m"
    ],
    [
      0.127811,
      "\u0008mv"
    ],
    [
      0.080423,
      " "
    ],
    [
      0.159170,
      "h"
    ],
    [
      0.048061,
      "e"
    ],
    [
      0.048020,
      "a"
    ],
    [
      0.079981,
      "r"
    ],
    [
      0.156120,
      "t"
    ],
    [
      0.595925,
      "."
    ],
    [
      0.119883,
      "t"
    ],
    [
      0.056093,
      "r"
    ],
    [
      0.072049,
      "a"
    ],
    [
      0.175898,
      "i"
    ],
    [
      0.072387,
      "n"
    ],
    [
      0.084149,
      "ing.model\u001b[1m \u001b[0m"
    ],
    [
      1.627322,
      "\u0008\u001b[0m ."
    ],
    [
      0.183930,
      "."
    ],
    [
      0.102805,
      "/"
    ],
    [
      0.233254,
      "m"
    ],
    [
      0.096113,
      "o"
    ],
    [
      0.100523,
      "dels\u001b[1m/\u001b[0m"
    ],
    [
      0.947420,
      "\u0008\u001b[0m \u0008"
    ],
    [
      0.000038,
      "\u001b[?1l\u001b\u003e"
    ],
    [
      0.000097,
      "\r\r\n"
    ],
    [
      0.001231,
      "\u001b]2;mv heart.training.model ../models\u0007\u001b]1;mv\u0007"
    ],
    [
      0.003053,
      "\u001b[1m\u001b[7m%\u001b[27m\u001b[1m\u001b[0m                                                                               \r \r"
    ],
    [
      0.000101,
      "\u001b]2;gabe@Gabes-MacBook-Pro: ~/Google Drive/svm_presentation/libsvm\u0007"
    ],
    [
      0.000006,
      "\u001b]1;..tation/libsvm\u0007"
    ],
    [
      0.018247,
      "\r\u001b[0m\u001b[27m\u001b[24m\u001b[J\u001b[01;32mâžœ \u001b[01;32m \u001b[36mlibsvm \u001b[01;34mgit:(\u001b[31mmaster\u001b[34m) \u001b[33mâœ—\u001b[00m\u001b[00m\u001b[01;34m \u001b[00m"
    ],
    [
      0.000005,
      "\u001b[K"
    ],
    [
      0.000070,
      "\u001b[?1h\u001b="
    ],
    [
      5.337396,
      "."
    ],
    [
      0.000225,
      "\u0008./"
    ],
    [
      0.167434,
      "s"
    ],
    [
      0.095861,
      "v"
    ],
    [
      0.207565,
      "m"
    ],
    [
      0.328322,
      "-"
    ],
    [
      0.208218,
      "p"
    ],
    [
      0.112440,
      "r"
    ],
    [
      0.063305,
      "e"
    ],
    [
      0.256499,
      "d"
    ],
    [
      0.244447,
      "ict\u001b[1m \u001b[0m"
    ],
    [
      1.156646,
      "\u0008\u001b[0m \u0008"
    ],
    [
      0.000011,
      "\u001b[?1l\u001b\u003e\r\r\n"
    ],
    [
      0.000535,
      "\u001b]2;./svm-predict\u0007\u001b]1;./svm-predict\u0007"
    ],
    [
      0.003610,
      "Usage: svm-predict [options] test_file model_file output_file\r\noptions:\r\n-b probability_estimates: whether to predict probability estimates, 0 or 1 (default 0); for one-class SVM only 0 is supported\r\n-q : quiet mode (no outputs)\r\n"
    ],
    [
      0.000423,
      "\u001b[1m\u001b[7m%\u001b[27m\u001b[1m\u001b[0m                                                                               \r \r"
    ],
    [
      0.000111,
      "\u001b]2;gabe@Gabes-MacBook-Pro: ~/Google Drive/svm_presentation/libsvm\u0007"
    ],
    [
      0.000021,
      "\u001b]1;..tation/libsvm\u0007"
    ],
    [
      0.018905,
      "\r\u001b[0m\u001b[27m\u001b[24m\u001b[J\u001b[01;31mâžœ \u001b[27m\u001b[01;32m \u001b[36mlibsvm \u001b[01;34mgit:(\u001b[31mmaster\u001b[34m) \u001b[33mâœ—\u001b[00m\u001b[00m\u001b[01;34m \u001b[00m"
    ],
    [
      0.000018,
      "\u001b[K"
    ],
    [
      0.000137,
      "\u001b[?1h\u001b="
    ],
    [
      1.760663,
      "."
    ],
    [
      0.021826,
      "\u0008./"
    ],
    [
      0.144713,
      "s"
    ],
    [
      0.071373,
      "v"
    ],
    [
      0.088019,
      "m"
    ],
    [
      0.656260,
      "-"
    ],
    [
      0.143142,
      "r"
    ],
    [
      0.168473,
      "p"
    ],
    [
      0.295667,
      "\u0008 \u0008"
    ],
    [
      0.112425,
      "\u0008 \u0008"
    ],
    [
      0.183915,
      "p"
    ],
    [
      0.082280,
      "r"
    ],
    [
      0.061700,
      "e"
    ],
    [
      0.328254,
      "d"
    ],
    [
      0.227024,
      "ict\u001b[1m \u001b[0m"
    ],
    [
      1.292802,
      "\u0008\u001b[0m ."
    ],
    [
      0.135895,
      "."
    ],
    [
      0.247912,
      "/"
    ],
    [
      0.144065,
      "d"
    ],
    [
      0.072030,
      "a"
    ],
    [
      0.103969,
      "t"
    ],
    [
      0.220770,
      "a\u001b[1m/\u001b[0m"
    ],
    [
      0.979680,
      "\u0008\u001b[0m/h"
    ],
    [
      0.063647,
      "e"
    ],
    [
      0.042625,
      "a"
    ],
    [
      0.109009,
      "r"
    ],
    [
      0.229178,
      "t"
    ],
    [
      0.219110,
      "."
    ],
    [
      0.127935,
      "v"
    ],
    [
      0.343946,
      "a"
    ],
    [
      0.247886,
      "l"
    ],
    [
      0.080237,
      "i"
    ],
    [
      0.122477,
      "dation\u001b[1m \u001b[0m"
    ],
    [
      1.693880,
      "\u0008\u001b[0m ."
    ],
    [
      0.119798,
      "."
    ],
    [
      0.103646,
      "/"
    ],
    [
      0.208010,
      "m"
    ],
    [
      0.079847,
      "o"
    ],
    [
      0.108397,
      "dels\u001b[1m/\u001b[0m"
    ],
    [
      1.147348,
      "\u0008\u001b[0m/h"
    ],
    [
      0.080269,
      "e"
    ],
    [
      0.049850,
      "a"
    ],
    [
      0.078375,
      "r"
    ],
    [
      0.168307,
      "t"
    ],
    [
      0.711534,
      ". \r\u001b[K"
    ],
    [
      0.285929,
      "training.model\u001b[1m \u001b[0m"
    ],
    [
      1.810381,
      "\u0008\u001b[0m h"
    ],
    [
      0.071645,
      "e"
    ],
    [
      0.032019,
      "a"
    ],
    [
      0.072110,
      "r"
    ],
    [
      0.215798,
      "t"
    ],
    [
      0.239942,
      "_"
    ],
    [
      0.191999,
      "f"
    ],
    [
      0.106546,
      "r"
    ],
    [
      0.077611,
      "o"
    ],
    [
      0.047833,
      "m"
    ],
    [
      0.208737,
      "_"
    ],
    [
      0.263287,
      "l"
    ],
    [
      0.207779,
      "i"
    ],
    [
      0.056312,
      "n"
    ],
    [
      0.064016,
      "e"
    ],
    [
      0.072263,
      "a"
    ],
    [
      0.071613,
      "r"
    ],
    [
      0.328775,
      "."
    ],
    [
      0.359191,
      "p"
    ],
    [
      0.103987,
      "r"
    ],
    [
      0.063957,
      "e"
    ],
    [
      0.200157,
      "d"
    ],
    [
      0.231965,
      "i"
    ],
    [
      0.104016,
      "c"
    ],
    [
      0.215870,
      "t"
    ],
    [
      0.495970,
      "i"
    ],
    [
      0.047952,
      "o"
    ],
    [
      0.135903,
      "n"
    ],
    [
      0.113287,
      "s"
    ],
    [
      0.967135,
      "\u001b[?1l\u001b\u003e"
    ],
    [
      0.000037,
      "\r\r\n"
    ],
    [
      0.000725,
      "\u001b]2;./svm-predict ../data/heart.validation ../models/heart.training.model \u0007\u001b]1;./svm-predict\u0007"
    ],
    [
      0.004247,
      "Accuracy = 85% (85/100) (classification)\r\n"
    ],
    [
      0.000327,
      "\u001b[1m\u001b[7m%\u001b[27m\u001b[1m\u001b[0m                                                                               \r \r"
    ],
    [
      0.000122,
      "\u001b]2;gabe@Gabes-MacBook-Pro: ~/Google Drive/svm_presentation/libsvm\u0007"
    ],
    [
      0.000004,
      "\u001b]1;..tation/libsvm\u0007"
    ],
    [
      0.017396,
      "\r\u001b[0m\u001b[27m\u001b[24m\u001b[J\u001b[01;32mâžœ \u001b[01;32m \u001b[36mlibsvm \u001b[01;34mgit:(\u001b[31mmaster\u001b[34m) \u001b[33mâœ—\u001b[00m\u001b[00m\u001b[01;34m \u001b[00m"
    ],
    [
      0.000005,
      "\u001b[K"
    ],
    [
      0.000112,
      "\u001b[?1h\u001b="
    ],
    [
      4.919744,
      "e"
    ],
    [
      0.176716,
      "\u0008ex"
    ],
    [
      0.176034,
      "i"
    ],
    [
      0.135878,
      "t"
    ],
    [
      2.024440,
      "\u001b[?1l\u001b\u003e"
    ],
    [
      0.000016,
      "\r\r\n"
    ],
    [
      0.000862,
      "\u001b]2;exit\u0007\u001b]1;exit\u0007"
    ]
  ]
}